dist: bionic
addons:
    apt:
        packages:
            - nodejs-dev node-gyp libssl1.0-dev npm python3-pip

language: rust
rust:
    - stable
    - beta
    - nightly

env:
    - RUST_BACKTRACE=1

matrix:
    allow_failures:
        - rust: beta
        - rust: nightly
    fast_finish: true

install:
    - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
    - cd webserver; npm install; cd ..
    - rustup component add clippy
#    - pip3 install --user maturin

script:
    - cd libraries
    - cargo test --verbose --workspace
    - cargo test --features "cache-multiplication" --verbose --workspace
    - cargo check --features "prime-two concurrent" --workspace
    - cargo clippy --workspace --all-targets -- -D warnings
    - cargo clippy --workspace --features "cache-multiplication concurrent" --all-targets -- -D warnings -A unused_imports
    - cd ..
    - cd webserver
    - cargo test --verbose --workspace
    - cargo test --features "cache-multiplication" --verbose --workspace
    - cargo check --features "prime-two concurrent" --workspace
    - cargo clippy --workspace --all-targets -- -D warnings
    - cargo clippy --workspace --features "cache-multiplication concurrent" --all-targets -- -D warnings -A unused_imports
    - npm run build
    - cd ..
#    - cd python/pyo3
#    - virtualenv -p /usr/bin/python3.6 ../virtualenv
#    - source ../virtualenv/bin/activate
#    - maturin develop

cache:
    cargo: true
    directories:
        - libraries/target
        - webserver/target
        - webserver/node_modules

before_deploy:
    - cd libraries; sh gen_doc.sh; cd ..
    - cp -r libraries/target/doc/ webserver/dist/

deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
  keep_history: true
  local_dir: webserver/dist/
  on:
      branch: master
      condition: "$TRAVIS_RUST_VERSION = stable"
