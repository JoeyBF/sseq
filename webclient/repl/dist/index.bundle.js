/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/eventemitter3/index.js\n");

/***/ }),

/***/ "./node_modules/uuid/index.js":
/*!************************************!*\
  !*** ./node_modules/uuid/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var v1 = __webpack_require__(/*! ./v1 */ \"./node_modules/uuid/v1.js\");\nvar v4 = __webpack_require__(/*! ./v4 */ \"./node_modules/uuid/v4.js\");\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9pbmRleC5qcz8xMWMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsbUJBQU8sQ0FBQyx1Q0FBTTtBQUN2QixTQUFTLG1CQUFPLENBQUMsdUNBQU07O0FBRXZCO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHYxID0gcmVxdWlyZSgnLi92MScpO1xudmFyIHY0ID0gcmVxdWlyZSgnLi92NCcpO1xuXG52YXIgdXVpZCA9IHY0O1xudXVpZC52MSA9IHYxO1xudXVpZC52NCA9IHY0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHV1aWQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/index.js\n");

/***/ }),

/***/ "./node_modules/uuid/lib/bytesToUuid.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvYnl0ZXNUb1V1aWQuanM/MjM2NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvbGliL2J5dGVzVG9VdWlkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb252ZXJ0IGFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzIHRvIFVVSUQgc3RyaW5nIGZvcm1hdCBvZiB0aGUgZm9ybTpcbiAqIFhYWFhYWFhYLVhYWFgtWFhYWC1YWFhYLVhYWFhYWFhYWFhYWFxuICovXG52YXIgYnl0ZVRvSGV4ID0gW107XG5mb3IgKHZhciBpID0gMDsgaSA8IDI1NjsgKytpKSB7XG4gIGJ5dGVUb0hleFtpXSA9IChpICsgMHgxMDApLnRvU3RyaW5nKDE2KS5zdWJzdHIoMSk7XG59XG5cbmZ1bmN0aW9uIGJ5dGVzVG9VdWlkKGJ1Ziwgb2Zmc2V0KSB7XG4gIHZhciBpID0gb2Zmc2V0IHx8IDA7XG4gIHZhciBidGggPSBieXRlVG9IZXg7XG4gIC8vIGpvaW4gdXNlZCB0byBmaXggbWVtb3J5IGlzc3VlIGNhdXNlZCBieSBjb25jYXRlbmF0aW9uOiBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMTc1I2M0XG4gIHJldHVybiAoW1xuICAgIGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sXG4gICAgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuICAgIGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcbiAgICBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG4gICAgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuICAgIGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sXG4gICAgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcbiAgICBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dXG4gIF0pLmpvaW4oJycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJ5dGVzVG9VdWlkO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/lib/bytesToUuid.js\n");

/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvcm5nLWJyb3dzZXIuanM/ZTFmNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUNBQWlDOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLFFBQVE7QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2xpYi9ybmctYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVuaXF1ZSBJRCBjcmVhdGlvbiByZXF1aXJlcyBhIGhpZ2ggcXVhbGl0eSByYW5kb20gIyBnZW5lcmF0b3IuICBJbiB0aGVcbi8vIGJyb3dzZXIgdGhpcyBpcyBhIGxpdHRsZSBjb21wbGljYXRlZCBkdWUgdG8gdW5rbm93biBxdWFsaXR5IG9mIE1hdGgucmFuZG9tKClcbi8vIGFuZCBpbmNvbnNpc3RlbnQgc3VwcG9ydCBmb3IgdGhlIGBjcnlwdG9gIEFQSS4gIFdlIGRvIHRoZSBiZXN0IHdlIGNhbiB2aWFcbi8vIGZlYXR1cmUtZGV0ZWN0aW9uXG5cbi8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0b1xuLy8gaW1wbGVtZW50YXRpb24uIEFsc28sIGZpbmQgdGhlIGNvbXBsZXRlIGltcGxlbWVudGF0aW9uIG9mIGNyeXB0byBvbiBJRTExLlxudmFyIGdldFJhbmRvbVZhbHVlcyA9ICh0eXBlb2YoY3J5cHRvKSAhPSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YobXNDcnlwdG8pICE9ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cubXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09ICdmdW5jdGlvbicgJiYgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQobXNDcnlwdG8pKTtcblxuaWYgKGdldFJhbmRvbVZhbHVlcykge1xuICAvLyBXSEFUV0cgY3J5cHRvIFJORyAtIGh0dHA6Ly93aWtpLndoYXR3Zy5vcmcvd2lraS9DcnlwdG9cbiAgdmFyIHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB3aGF0d2dSTkcoKSB7XG4gICAgZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbiAgICByZXR1cm4gcm5kczg7XG4gIH07XG59IGVsc2Uge1xuICAvLyBNYXRoLnJhbmRvbSgpLWJhc2VkIChSTkcpXG4gIC8vXG4gIC8vIElmIGFsbCBlbHNlIGZhaWxzLCB1c2UgTWF0aC5yYW5kb20oKS4gIEl0J3MgZmFzdCwgYnV0IGlzIG9mIHVuc3BlY2lmaWVkXG4gIC8vIHF1YWxpdHkuXG4gIHZhciBybmRzID0gbmV3IEFycmF5KDE2KTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1hdGhSTkcoKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHI7IGkgPCAxNjsgaSsrKSB7XG4gICAgICBpZiAoKGkgJiAweDAzKSA9PT0gMCkgciA9IE1hdGgucmFuZG9tKCkgKiAweDEwMDAwMDAwMDtcbiAgICAgIHJuZHNbaV0gPSByID4+PiAoKGkgJiAweDAzKSA8PCAzKSAmIDB4ZmY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJuZHM7XG4gIH07XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/lib/rng-browser.js\n");

/***/ }),

/***/ "./node_modules/uuid/v1.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v1.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92MS5qcz9jNDM3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx5REFBVztBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxpRUFBbUI7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUM7QUFDbkM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvdjEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG4vLyAqKmB2MSgpYCAtIEdlbmVyYXRlIHRpbWUtYmFzZWQgVVVJRCoqXG4vL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL0xpb3NLL1VVSUQuanNcbi8vIGFuZCBodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvdXVpZC5odG1sXG5cbnZhciBfbm9kZUlkO1xudmFyIF9jbG9ja3NlcTtcblxuLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG52YXIgX2xhc3RNU2VjcyA9IDA7XG52YXIgX2xhc3ROU2VjcyA9IDA7XG5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQgZm9yIEFQSSBkZXRhaWxzXG5mdW5jdGlvbiB2MShvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcbiAgdmFyIGIgPSBidWYgfHwgW107XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciBub2RlID0gb3B0aW9ucy5ub2RlIHx8IF9ub2RlSWQ7XG4gIHZhciBjbG9ja3NlcSA9IG9wdGlvbnMuY2xvY2tzZXEgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMuY2xvY2tzZXEgOiBfY2xvY2tzZXE7XG5cbiAgLy8gbm9kZSBhbmQgY2xvY2tzZXEgbmVlZCB0byBiZSBpbml0aWFsaXplZCB0byByYW5kb20gdmFsdWVzIGlmIHRoZXkncmUgbm90XG4gIC8vIHNwZWNpZmllZC4gIFdlIGRvIHRoaXMgbGF6aWx5IHRvIG1pbmltaXplIGlzc3VlcyByZWxhdGVkIHRvIGluc3VmZmljaWVudFxuICAvLyBzeXN0ZW0gZW50cm9weS4gIFNlZSAjMTg5XG4gIGlmIChub2RlID09IG51bGwgfHwgY2xvY2tzZXEgPT0gbnVsbCkge1xuICAgIHZhciBzZWVkQnl0ZXMgPSBybmcoKTtcbiAgICBpZiAobm9kZSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC41LCBjcmVhdGUgYW5kIDQ4LWJpdCBub2RlIGlkLCAoNDcgcmFuZG9tIGJpdHMgKyBtdWx0aWNhc3QgYml0ID0gMSlcbiAgICAgIG5vZGUgPSBfbm9kZUlkID0gW1xuICAgICAgICBzZWVkQnl0ZXNbMF0gfCAweDAxLFxuICAgICAgICBzZWVkQnl0ZXNbMV0sIHNlZWRCeXRlc1syXSwgc2VlZEJ5dGVzWzNdLCBzZWVkQnl0ZXNbNF0sIHNlZWRCeXRlc1s1XVxuICAgICAgXTtcbiAgICB9XG4gICAgaWYgKGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjIuMiwgcmFuZG9taXplICgxNCBiaXQpIGNsb2Nrc2VxXG4gICAgICBjbG9ja3NlcSA9IF9jbG9ja3NlcSA9IChzZWVkQnl0ZXNbNl0gPDwgOCB8IHNlZWRCeXRlc1s3XSkgJiAweDNmZmY7XG4gICAgfVxuICB9XG5cbiAgLy8gVVVJRCB0aW1lc3RhbXBzIGFyZSAxMDAgbmFuby1zZWNvbmQgdW5pdHMgc2luY2UgdGhlIEdyZWdvcmlhbiBlcG9jaCxcbiAgLy8gKDE1ODItMTAtMTUgMDA6MDApLiAgSlNOdW1iZXJzIGFyZW4ndCBwcmVjaXNlIGVub3VnaCBmb3IgdGhpcywgc29cbiAgLy8gdGltZSBpcyBoYW5kbGVkIGludGVybmFsbHkgYXMgJ21zZWNzJyAoaW50ZWdlciBtaWxsaXNlY29uZHMpIGFuZCAnbnNlY3MnXG4gIC8vICgxMDAtbmFub3NlY29uZHMgb2Zmc2V0IGZyb20gbXNlY3MpIHNpbmNlIHVuaXggZXBvY2gsIDE5NzAtMDEtMDEgMDA6MDAuXG4gIHZhciBtc2VjcyA9IG9wdGlvbnMubXNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubXNlY3MgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcblxuICAvLyBQZXIgNC4yLjEuMiwgdXNlIGNvdW50IG9mIHV1aWQncyBnZW5lcmF0ZWQgZHVyaW5nIHRoZSBjdXJyZW50IGNsb2NrXG4gIC8vIGN5Y2xlIHRvIHNpbXVsYXRlIGhpZ2hlciByZXNvbHV0aW9uIGNsb2NrXG4gIHZhciBuc2VjcyA9IG9wdGlvbnMubnNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubnNlY3MgOiBfbGFzdE5TZWNzICsgMTtcblxuICAvLyBUaW1lIHNpbmNlIGxhc3QgdXVpZCBjcmVhdGlvbiAoaW4gbXNlY3MpXG4gIHZhciBkdCA9IChtc2VjcyAtIF9sYXN0TVNlY3MpICsgKG5zZWNzIC0gX2xhc3ROU2VjcykvMTAwMDA7XG5cbiAgLy8gUGVyIDQuMi4xLjIsIEJ1bXAgY2xvY2tzZXEgb24gY2xvY2sgcmVncmVzc2lvblxuICBpZiAoZHQgPCAwICYmIG9wdGlvbnMuY2xvY2tzZXEgPT09IHVuZGVmaW5lZCkge1xuICAgIGNsb2Nrc2VxID0gY2xvY2tzZXEgKyAxICYgMHgzZmZmO1xuICB9XG5cbiAgLy8gUmVzZXQgbnNlY3MgaWYgY2xvY2sgcmVncmVzc2VzIChuZXcgY2xvY2tzZXEpIG9yIHdlJ3ZlIG1vdmVkIG9udG8gYSBuZXdcbiAgLy8gdGltZSBpbnRlcnZhbFxuICBpZiAoKGR0IDwgMCB8fCBtc2VjcyA+IF9sYXN0TVNlY3MpICYmIG9wdGlvbnMubnNlY3MgPT09IHVuZGVmaW5lZCkge1xuICAgIG5zZWNzID0gMDtcbiAgfVxuXG4gIC8vIFBlciA0LjIuMS4yIFRocm93IGVycm9yIGlmIHRvbyBtYW55IHV1aWRzIGFyZSByZXF1ZXN0ZWRcbiAgaWYgKG5zZWNzID49IDEwMDAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1dWlkLnYxKCk6IENhblxcJ3QgY3JlYXRlIG1vcmUgdGhhbiAxME0gdXVpZHMvc2VjJyk7XG4gIH1cblxuICBfbGFzdE1TZWNzID0gbXNlY3M7XG4gIF9sYXN0TlNlY3MgPSBuc2VjcztcbiAgX2Nsb2Nrc2VxID0gY2xvY2tzZXE7XG5cbiAgLy8gUGVyIDQuMS40IC0gQ29udmVydCBmcm9tIHVuaXggZXBvY2ggdG8gR3JlZ29yaWFuIGVwb2NoXG4gIG1zZWNzICs9IDEyMjE5MjkyODAwMDAwO1xuXG4gIC8vIGB0aW1lX2xvd2BcbiAgdmFyIHRsID0gKChtc2VjcyAmIDB4ZmZmZmZmZikgKiAxMDAwMCArIG5zZWNzKSAlIDB4MTAwMDAwMDAwO1xuICBiW2krK10gPSB0bCA+Pj4gMjQgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gMTYgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsICYgMHhmZjtcblxuICAvLyBgdGltZV9taWRgXG4gIHZhciB0bWggPSAobXNlY3MgLyAweDEwMDAwMDAwMCAqIDEwMDAwKSAmIDB4ZmZmZmZmZjtcbiAgYltpKytdID0gdG1oID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdG1oICYgMHhmZjtcblxuICAvLyBgdGltZV9oaWdoX2FuZF92ZXJzaW9uYFxuICBiW2krK10gPSB0bWggPj4+IDI0ICYgMHhmIHwgMHgxMDsgLy8gaW5jbHVkZSB2ZXJzaW9uXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMTYgJiAweGZmO1xuXG4gIC8vIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYCAoUGVyIDQuMi4yIC0gaW5jbHVkZSB2YXJpYW50KVxuICBiW2krK10gPSBjbG9ja3NlcSA+Pj4gOCB8IDB4ODA7XG5cbiAgLy8gYGNsb2NrX3NlcV9sb3dgXG4gIGJbaSsrXSA9IGNsb2Nrc2VxICYgMHhmZjtcblxuICAvLyBgbm9kZWBcbiAgZm9yICh2YXIgbiA9IDA7IG4gPCA2OyArK24pIHtcbiAgICBiW2kgKyBuXSA9IG5vZGVbbl07XG4gIH1cblxuICByZXR1cm4gYnVmID8gYnVmIDogYnl0ZXNUb1V1aWQoYik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdjE7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/v1.js\n");

/***/ }),

/***/ "./node_modules/uuid/v4.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v4.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92NC5qcz9jNjRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx5REFBVztBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxpRUFBbUI7O0FBRTdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvdjQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcblxuICBpZiAodHlwZW9mKG9wdGlvbnMpID09ICdzdHJpbmcnKSB7XG4gICAgYnVmID0gb3B0aW9ucyA9PT0gJ2JpbmFyeScgPyBuZXcgQXJyYXkoMTYpIDogbnVsbDtcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7XG5cbiAgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuICBybmRzWzZdID0gKHJuZHNbNl0gJiAweDBmKSB8IDB4NDA7XG4gIHJuZHNbOF0gPSAocm5kc1s4XSAmIDB4M2YpIHwgMHg4MDtcblxuICAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcbiAgaWYgKGJ1Zikge1xuICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCAxNjsgKytpaSkge1xuICAgICAgYnVmW2kgKyBpaV0gPSBybmRzW2lpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IGJ5dGVzVG9VdWlkKHJuZHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHY0O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/v4.js\n");

/***/ }),

/***/ "./src/history.js":
/*!************************!*\
  !*** ./src/history.js ***!
  \************************/
/*! exports provided: History */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"History\", function() { return History; });\n/* harmony import */ var _indexedDB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./indexedDB */ \"./src/indexedDB.js\");\n\r\n\r\nclass History {\r\n    constructor(){ \r\n        this.store = new _indexedDB__WEBPACK_IMPORTED_MODULE_0__[\"IndexedDBStorage\"](\"sseq-repl-history\", 2);\r\n        this.databaseReady = this.openDatabase();\r\n        this.historyStrings = [];\r\n        this.temporaryValues = [];\r\n        this.stringsFromStorage = [];\r\n        this.undoStack = [];\r\n        this.redoStack = [];\r\n        window.addEventListener(\"pagehide\", this.stowHistory.bind(this));;\r\n    }\r\n\r\n    async getItem(key){\r\n        await this.databaseReady;\r\n        if(key in this.temporaryValues){\r\n            return this.temporaryValues[key];\r\n        } \r\n        if(key in this.historyStrings){\r\n            return this.historyStrings[key];\r\n        } \r\n        if(key in this.stringsFromStorage){\r\n            return this.stringsFromStorage[key];\r\n        }\r\n        await this.store.open();\r\n        this.stringsFromStorage[key] = await this.store.readTransaction().getItem(key);\r\n        return this.stringsFromStorage[key];\r\n    }\r\n\r\n    async openDatabase(){\r\n        await this.store.open();\r\n        await this.commitStowedHistories();\r\n        this.storedHistoryLength = (await this.store.readTransaction().getItem(\"length\")) || 0;\r\n        this.idx = this.storedHistoryLength;\r\n    }\r\n\r\n    get length(){\r\n        return this.historyStrings.length || this.storedHistoryLength;\r\n    }\r\n\r\n    async push(value){\r\n        await this.databaseReady;\r\n        let mostRecentValue = await this.getItem(this.length - 1);\r\n        // If we use the same command twice, don't add another to history.\r\n        if(value === mostRecentValue){\r\n            return;\r\n        }\r\n        this.historyStrings[this.length] = value;\r\n        this.temporaryValues = [];\r\n        this.undoStack = [];\r\n        this.redoStack = [];\r\n        this.idx = this.length;\r\n    }\r\n\r\n    step(didx) {\r\n\t\tlet oldIdx = this.idx;\r\n\t\tthis.idx = Math.min(Math.max(this.idx + didx, 0), this.length);\r\n        if(this.idx === oldIdx){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.redoStack = [];\r\n        this.undoStack.push(didx);\r\n        return true;\r\n    }\r\n    \r\n    get value(){\r\n        return this.getItem(this.idx);\r\n    }\r\n\r\n    setTemporaryValue(value){\r\n        this.temporaryValues[this.idx] = value;\r\n    }\r\n\r\n    undoStep(){\r\n        let didx = this.undoStack.pop();\r\n        this.idx -= didx;\r\n        this.redoStack.push(didx);\r\n    }\r\n\r\n    redoStep(){\r\n        let didx = this.redoStack.pop();\r\n        this.historyIdx += didx;\r\n        this.undoStack.push(didx);\r\n    }\r\n\r\n    static get stowagePrefix(){\r\n        return \"history-stowage-\";\r\n    }\r\n\r\n    stowHistory(){\r\n        let toStow = [];\r\n        this.historyStrings.forEach((e) => toStow.push(e));\r\n        if(toStow.length === 0){\r\n            return;\r\n        }\r\n        localStorage.setItem(`${History.stowagePrefix}${Date.now()}`, JSON.stringify(toStow));\r\n    }\r\n\r\n    async commitStowedHistories(){\r\n        // Don't await this.databaseReady; we are getting called inside of openDatabase\r\n        // so that would deadlock.\r\n        let keysToStore = [];\r\n        for(let i=0; i < localStorage.length; i++){\r\n            let key = localStorage.key(i);\r\n            if(key.startsWith(History.stowagePrefix)){\r\n                keysToStore.push(Number(key.slice(History.stowagePrefix.length)));\r\n            }\r\n        }\r\n        keysToStore.sort((a,b) => a-b);\r\n        if(keysToStore.length === 0){\r\n            return;\r\n        }\r\n        let transaction = this.store.writeTransaction();\r\n        let lastCommitTime = (await transaction.getItem(\"lastCommitTime\")) || 0;\r\n        let length = (await transaction.getItem(\"length\")) || 0;\r\n        let requests = [];\r\n        keysToStore = keysToStore.filter(v => v > lastCommitTime);\r\n        for(let key of keysToStore){\r\n            let localStorageKey = `${History.stowagePrefix}${key}`;\r\n            let stowedHistory = JSON.parse(localStorage.getItem(localStorageKey));\r\n            // console.log(stowedHistory);\r\n            localStorage.removeItem(localStorageKey);\r\n            for(let histItem of stowedHistory){\r\n                requests.push(transaction.setItem(length, histItem));\r\n                length++;\r\n            }\r\n        }\r\n        let newLastCommitTime = keysToStore[keysToStore.length - 1];\r\n        requests.push(transaction.setItem(\"length\", length));\r\n        requests.push(transaction.setItem(\"lastCommitTime\", newLastCommitTime));\r\n        await Promise.all(requests);\r\n    }\r\n\r\n}\r\n\r\nwindow.History = History;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGlzdG9yeS5qcz83Mjc3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUErQzs7QUFFeEM7QUFDUCxrQjtBQUNBLHlCQUF5QiwyREFBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFM7QUFDQTtBQUNBO0FBQ0EsUztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxzQkFBc0IsRUFBRSxXQUFXO0FBQ25FOztBQUVBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQSxvQkFBb0IseUJBQXlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxzQkFBc0IsRUFBRSxJQUFJO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwiZmlsZSI6Ii4vc3JjL2hpc3RvcnkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmRleGVkREJTdG9yYWdlIH0gZnJvbSBcIi4vaW5kZXhlZERCXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgSGlzdG9yeSB7XHJcbiAgICBjb25zdHJ1Y3RvcigpeyBcclxuICAgICAgICB0aGlzLnN0b3JlID0gbmV3IEluZGV4ZWREQlN0b3JhZ2UoXCJzc2VxLXJlcGwtaGlzdG9yeVwiLCAyKTtcclxuICAgICAgICB0aGlzLmRhdGFiYXNlUmVhZHkgPSB0aGlzLm9wZW5EYXRhYmFzZSgpO1xyXG4gICAgICAgIHRoaXMuaGlzdG9yeVN0cmluZ3MgPSBbXTtcclxuICAgICAgICB0aGlzLnRlbXBvcmFyeVZhbHVlcyA9IFtdO1xyXG4gICAgICAgIHRoaXMuc3RyaW5nc0Zyb21TdG9yYWdlID0gW107XHJcbiAgICAgICAgdGhpcy51bmRvU3RhY2sgPSBbXTtcclxuICAgICAgICB0aGlzLnJlZG9TdGFjayA9IFtdO1xyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicGFnZWhpZGVcIiwgdGhpcy5zdG93SGlzdG9yeS5iaW5kKHRoaXMpKTs7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgZ2V0SXRlbShrZXkpe1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZGF0YWJhc2VSZWFkeTtcclxuICAgICAgICBpZihrZXkgaW4gdGhpcy50ZW1wb3JhcnlWYWx1ZXMpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy50ZW1wb3JhcnlWYWx1ZXNba2V5XTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGlmKGtleSBpbiB0aGlzLmhpc3RvcnlTdHJpbmdzKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGlzdG9yeVN0cmluZ3Nba2V5XTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGlmKGtleSBpbiB0aGlzLnN0cmluZ3NGcm9tU3RvcmFnZSl7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnN0cmluZ3NGcm9tU3RvcmFnZVtrZXldO1xyXG4gICAgICAgIH1cclxuICAgICAgICBhd2FpdCB0aGlzLnN0b3JlLm9wZW4oKTtcclxuICAgICAgICB0aGlzLnN0cmluZ3NGcm9tU3RvcmFnZVtrZXldID0gYXdhaXQgdGhpcy5zdG9yZS5yZWFkVHJhbnNhY3Rpb24oKS5nZXRJdGVtKGtleSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RyaW5nc0Zyb21TdG9yYWdlW2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgb3BlbkRhdGFiYXNlKCl7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5zdG9yZS5vcGVuKCk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5jb21taXRTdG93ZWRIaXN0b3JpZXMoKTtcclxuICAgICAgICB0aGlzLnN0b3JlZEhpc3RvcnlMZW5ndGggPSAoYXdhaXQgdGhpcy5zdG9yZS5yZWFkVHJhbnNhY3Rpb24oKS5nZXRJdGVtKFwibGVuZ3RoXCIpKSB8fCAwO1xyXG4gICAgICAgIHRoaXMuaWR4ID0gdGhpcy5zdG9yZWRIaXN0b3J5TGVuZ3RoO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBsZW5ndGgoKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5oaXN0b3J5U3RyaW5ncy5sZW5ndGggfHwgdGhpcy5zdG9yZWRIaXN0b3J5TGVuZ3RoO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHB1c2godmFsdWUpe1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZGF0YWJhc2VSZWFkeTtcclxuICAgICAgICBsZXQgbW9zdFJlY2VudFZhbHVlID0gYXdhaXQgdGhpcy5nZXRJdGVtKHRoaXMubGVuZ3RoIC0gMSk7XHJcbiAgICAgICAgLy8gSWYgd2UgdXNlIHRoZSBzYW1lIGNvbW1hbmQgdHdpY2UsIGRvbid0IGFkZCBhbm90aGVyIHRvIGhpc3RvcnkuXHJcbiAgICAgICAgaWYodmFsdWUgPT09IG1vc3RSZWNlbnRWYWx1ZSl7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5oaXN0b3J5U3RyaW5nc1t0aGlzLmxlbmd0aF0gPSB2YWx1ZTtcclxuICAgICAgICB0aGlzLnRlbXBvcmFyeVZhbHVlcyA9IFtdO1xyXG4gICAgICAgIHRoaXMudW5kb1N0YWNrID0gW107XHJcbiAgICAgICAgdGhpcy5yZWRvU3RhY2sgPSBbXTtcclxuICAgICAgICB0aGlzLmlkeCA9IHRoaXMubGVuZ3RoO1xyXG4gICAgfVxyXG5cclxuICAgIHN0ZXAoZGlkeCkge1xyXG5cdFx0bGV0IG9sZElkeCA9IHRoaXMuaWR4O1xyXG5cdFx0dGhpcy5pZHggPSBNYXRoLm1pbihNYXRoLm1heCh0aGlzLmlkeCArIGRpZHgsIDApLCB0aGlzLmxlbmd0aCk7XHJcbiAgICAgICAgaWYodGhpcy5pZHggPT09IG9sZElkeCl7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHRcdHRoaXMucmVkb1N0YWNrID0gW107XHJcbiAgICAgICAgdGhpcy51bmRvU3RhY2sucHVzaChkaWR4KTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZ2V0IHZhbHVlKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0SXRlbSh0aGlzLmlkeCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VGVtcG9yYXJ5VmFsdWUodmFsdWUpe1xyXG4gICAgICAgIHRoaXMudGVtcG9yYXJ5VmFsdWVzW3RoaXMuaWR4XSA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHVuZG9TdGVwKCl7XHJcbiAgICAgICAgbGV0IGRpZHggPSB0aGlzLnVuZG9TdGFjay5wb3AoKTtcclxuICAgICAgICB0aGlzLmlkeCAtPSBkaWR4O1xyXG4gICAgICAgIHRoaXMucmVkb1N0YWNrLnB1c2goZGlkeCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVkb1N0ZXAoKXtcclxuICAgICAgICBsZXQgZGlkeCA9IHRoaXMucmVkb1N0YWNrLnBvcCgpO1xyXG4gICAgICAgIHRoaXMuaGlzdG9yeUlkeCArPSBkaWR4O1xyXG4gICAgICAgIHRoaXMudW5kb1N0YWNrLnB1c2goZGlkeCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldCBzdG93YWdlUHJlZml4KCl7XHJcbiAgICAgICAgcmV0dXJuIFwiaGlzdG9yeS1zdG93YWdlLVwiO1xyXG4gICAgfVxyXG5cclxuICAgIHN0b3dIaXN0b3J5KCl7XHJcbiAgICAgICAgbGV0IHRvU3RvdyA9IFtdO1xyXG4gICAgICAgIHRoaXMuaGlzdG9yeVN0cmluZ3MuZm9yRWFjaCgoZSkgPT4gdG9TdG93LnB1c2goZSkpO1xyXG4gICAgICAgIGlmKHRvU3Rvdy5sZW5ndGggPT09IDApe1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGAke0hpc3Rvcnkuc3Rvd2FnZVByZWZpeH0ke0RhdGUubm93KCl9YCwgSlNPTi5zdHJpbmdpZnkodG9TdG93KSk7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgY29tbWl0U3Rvd2VkSGlzdG9yaWVzKCl7XHJcbiAgICAgICAgLy8gRG9uJ3QgYXdhaXQgdGhpcy5kYXRhYmFzZVJlYWR5OyB3ZSBhcmUgZ2V0dGluZyBjYWxsZWQgaW5zaWRlIG9mIG9wZW5EYXRhYmFzZVxyXG4gICAgICAgIC8vIHNvIHRoYXQgd291bGQgZGVhZGxvY2suXHJcbiAgICAgICAgbGV0IGtleXNUb1N0b3JlID0gW107XHJcbiAgICAgICAgZm9yKGxldCBpPTA7IGkgPCBsb2NhbFN0b3JhZ2UubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBsZXQga2V5ID0gbG9jYWxTdG9yYWdlLmtleShpKTtcclxuICAgICAgICAgICAgaWYoa2V5LnN0YXJ0c1dpdGgoSGlzdG9yeS5zdG93YWdlUHJlZml4KSl7XHJcbiAgICAgICAgICAgICAgICBrZXlzVG9TdG9yZS5wdXNoKE51bWJlcihrZXkuc2xpY2UoSGlzdG9yeS5zdG93YWdlUHJlZml4Lmxlbmd0aCkpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBrZXlzVG9TdG9yZS5zb3J0KChhLGIpID0+IGEtYik7XHJcbiAgICAgICAgaWYoa2V5c1RvU3RvcmUubGVuZ3RoID09PSAwKXtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgdHJhbnNhY3Rpb24gPSB0aGlzLnN0b3JlLndyaXRlVHJhbnNhY3Rpb24oKTtcclxuICAgICAgICBsZXQgbGFzdENvbW1pdFRpbWUgPSAoYXdhaXQgdHJhbnNhY3Rpb24uZ2V0SXRlbShcImxhc3RDb21taXRUaW1lXCIpKSB8fCAwO1xyXG4gICAgICAgIGxldCBsZW5ndGggPSAoYXdhaXQgdHJhbnNhY3Rpb24uZ2V0SXRlbShcImxlbmd0aFwiKSkgfHwgMDtcclxuICAgICAgICBsZXQgcmVxdWVzdHMgPSBbXTtcclxuICAgICAgICBrZXlzVG9TdG9yZSA9IGtleXNUb1N0b3JlLmZpbHRlcih2ID0+IHYgPiBsYXN0Q29tbWl0VGltZSk7XHJcbiAgICAgICAgZm9yKGxldCBrZXkgb2Yga2V5c1RvU3RvcmUpe1xyXG4gICAgICAgICAgICBsZXQgbG9jYWxTdG9yYWdlS2V5ID0gYCR7SGlzdG9yeS5zdG93YWdlUHJlZml4fSR7a2V5fWA7XHJcbiAgICAgICAgICAgIGxldCBzdG93ZWRIaXN0b3J5ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShsb2NhbFN0b3JhZ2VLZXkpKTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coc3Rvd2VkSGlzdG9yeSk7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGxvY2FsU3RvcmFnZUtleSk7XHJcbiAgICAgICAgICAgIGZvcihsZXQgaGlzdEl0ZW0gb2Ygc3Rvd2VkSGlzdG9yeSl7XHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0cy5wdXNoKHRyYW5zYWN0aW9uLnNldEl0ZW0obGVuZ3RoLCBoaXN0SXRlbSkpO1xyXG4gICAgICAgICAgICAgICAgbGVuZ3RoKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IG5ld0xhc3RDb21taXRUaW1lID0ga2V5c1RvU3RvcmVba2V5c1RvU3RvcmUubGVuZ3RoIC0gMV07XHJcbiAgICAgICAgcmVxdWVzdHMucHVzaCh0cmFuc2FjdGlvbi5zZXRJdGVtKFwibGVuZ3RoXCIsIGxlbmd0aCkpO1xyXG4gICAgICAgIHJlcXVlc3RzLnB1c2godHJhbnNhY3Rpb24uc2V0SXRlbShcImxhc3RDb21taXRUaW1lXCIsIG5ld0xhc3RDb21taXRUaW1lKSk7XHJcbiAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwocmVxdWVzdHMpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxud2luZG93Lkhpc3RvcnkgPSBIaXN0b3J5OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/history.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _repl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./repl */ \"./src/repl.js\");\n\r\n\r\n// import registerServiceWorker, {\r\n//     ServiceWorkerNoSupportError\r\n// } from 'service-worker-loader!./service.worker';\r\n \r\nnavigator.serviceWorker.register(\"/dist/service_worker.bundle.js\", { scope: '/dist/' })\r\n.then((registration) => {\r\n    console.log('Service worker loaded', registration);\r\n}).catch((err) => {\r\n    // if (err instanceof ServiceWorkerNoSupportError) {\r\n    //     console.log('Service worker is not supported.');\r\n    // } else {\r\n        console.error('Error loading service worker!', err);\r\n    // }\r\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQXFDOztBQUVyQztBQUNBO0FBQ0EsSUFBSTs7QUFFSixvRUFBb0Usa0JBQWtCO0FBQ3RGO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcGxFbGVtZW50IH0gZnJvbSBcIi4vcmVwbFwiO1xyXG5cclxuLy8gaW1wb3J0IHJlZ2lzdGVyU2VydmljZVdvcmtlciwge1xyXG4vLyAgICAgU2VydmljZVdvcmtlck5vU3VwcG9ydEVycm9yXHJcbi8vIH0gZnJvbSAnc2VydmljZS13b3JrZXItbG9hZGVyIS4vc2VydmljZS53b3JrZXInO1xyXG4gXHJcbm5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKFwiL2Rpc3Qvc2VydmljZV93b3JrZXIuYnVuZGxlLmpzXCIsIHsgc2NvcGU6ICcvZGlzdC8nIH0pXHJcbi50aGVuKChyZWdpc3RyYXRpb24pID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdTZXJ2aWNlIHdvcmtlciBsb2FkZWQnLCByZWdpc3RyYXRpb24pO1xyXG59KS5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAvLyBpZiAoZXJyIGluc3RhbmNlb2YgU2VydmljZVdvcmtlck5vU3VwcG9ydEVycm9yKSB7XHJcbiAgICAvLyAgICAgY29uc29sZS5sb2coJ1NlcnZpY2Ugd29ya2VyIGlzIG5vdCBzdXBwb3J0ZWQuJyk7XHJcbiAgICAvLyB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgc2VydmljZSB3b3JrZXIhJywgZXJyKTtcclxuICAgIC8vIH1cclxufSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/indexedDB.js":
/*!**************************!*\
  !*** ./src/indexedDB.js ***!
  \**************************/
/*! exports provided: openDatabase, IndexedDBStorage, IndexedDBTransaction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"openDatabase\", function() { return openDatabase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IndexedDBStorage\", function() { return IndexedDBStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IndexedDBTransaction\", function() { return IndexedDBTransaction; });\nfunction openDatabase(name, version){\r\n    const request = indexedDB.open(name, version);\r\n    request.onupgradeneeded = (e) => {\r\n        const db = e.target.result;\r\n\r\n        // Delete the old datastore.\r\n        if (db.objectStoreNames.contains(name)) {\r\n            db.deleteObjectStore(name);\r\n        }\r\n\r\n        // Create a new datastore.\r\n        const store = db.createObjectStore(name, {\r\n            keyPath: 'key'\r\n        });\r\n\r\n        store.createIndex(\"key\", \"key\",  { unique: true });\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n        request.onsuccess = (e) => resolve(e.target.result);    \r\n        request.onerror = reject;\r\n    });\r\n}\r\n\r\n\r\nclass IndexedDBStorage {\r\n    constructor(name, version){\r\n        this.name = name;\r\n        this.version = version;\r\n    }\r\n\r\n    async open() {\r\n        if(this.datastore){\r\n            return;\r\n        }\r\n        this.datastore = await openDatabase(this.name, this.version);\r\n    }\r\n\r\n    readTransaction(){\r\n        return new IndexedDBTransaction(\r\n            this.datastore.transaction([this.name], 'readonly').objectStore(this.name), \r\n            false\r\n        );\r\n    }\r\n\r\n    writeTransaction(){\r\n        return new IndexedDBTransaction(\r\n            this.datastore.transaction([this.name], 'readwrite').objectStore(this.name), \r\n            true\r\n        );\r\n    }\r\n}\r\n\r\nclass IndexedDBTransaction {\r\n    constructor(objectStore, mutable){\r\n        this.objectStore = objectStore;\r\n        this.mutable = mutable;\r\n    }\r\n    \r\n    getItem(key){\r\n        const objectStoreRequest = this.objectStore.index(\"key\").get(key);\r\n        return new Promise((resolve, reject) => {\r\n            objectStoreRequest.onsuccess = function (e) {\r\n                resolve(objectStoreRequest.result && objectStoreRequest.result.value);\r\n            };\r\n            objectStoreRequest.onerror = reject;\r\n        });\r\n    }\r\n    \r\n    setItem(key, value){\r\n        if(!this.mutable){\r\n            throw new Error(\"Attempted to mutate using immutable database reference.\");\r\n        }\r\n        const timestamp = new Date().getTime();\r\n        const item = { key, value, timestamp };\r\n        const request = this.objectStore.put(item);\r\n        return new Promise((resolve, reject) => {\r\n            request.onsuccess = function (e) {\r\n                resolve(item);\r\n            };    \r\n            request.onerror = reject;\r\n        });\r\n    }\r\n    \r\n    deleteItem(key){\r\n        const request = this.objectStore.delete(key);\r\n            \r\n        return new Promise((resolve, reject) => {\r\n            request.onsuccess = function (e) {\r\n                resolve();\r\n            };\r\n            request.onerror = reject;\r\n        });\r\n    }\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXhlZERCLmpzPzQ2YTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVULDBDQUEwQyxlQUFlO0FBQ3pEO0FBQ0E7QUFDQSw0RDtBQUNBO0FBQ0EsS0FBSztBQUNMOzs7QUFHTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYztBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwiZmlsZSI6Ii4vc3JjL2luZGV4ZWREQi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBvcGVuRGF0YWJhc2UobmFtZSwgdmVyc2lvbil7XHJcbiAgICBjb25zdCByZXF1ZXN0ID0gaW5kZXhlZERCLm9wZW4obmFtZSwgdmVyc2lvbik7XHJcbiAgICByZXF1ZXN0Lm9udXBncmFkZW5lZWRlZCA9IChlKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZGIgPSBlLnRhcmdldC5yZXN1bHQ7XHJcblxyXG4gICAgICAgIC8vIERlbGV0ZSB0aGUgb2xkIGRhdGFzdG9yZS5cclxuICAgICAgICBpZiAoZGIub2JqZWN0U3RvcmVOYW1lcy5jb250YWlucyhuYW1lKSkge1xyXG4gICAgICAgICAgICBkYi5kZWxldGVPYmplY3RTdG9yZShuYW1lKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBkYXRhc3RvcmUuXHJcbiAgICAgICAgY29uc3Qgc3RvcmUgPSBkYi5jcmVhdGVPYmplY3RTdG9yZShuYW1lLCB7XHJcbiAgICAgICAgICAgIGtleVBhdGg6ICdrZXknXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHN0b3JlLmNyZWF0ZUluZGV4KFwia2V5XCIsIFwia2V5XCIsICB7IHVuaXF1ZTogdHJ1ZSB9KTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIHJlcXVlc3Qub25zdWNjZXNzID0gKGUpID0+IHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsgICAgXHJcbiAgICAgICAgcmVxdWVzdC5vbmVycm9yID0gcmVqZWN0O1xyXG4gICAgfSk7XHJcbn1cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgSW5kZXhlZERCU3RvcmFnZSB7XHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCB2ZXJzaW9uKXtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMudmVyc2lvbiA9IHZlcnNpb247XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgb3BlbigpIHtcclxuICAgICAgICBpZih0aGlzLmRhdGFzdG9yZSl7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5kYXRhc3RvcmUgPSBhd2FpdCBvcGVuRGF0YWJhc2UodGhpcy5uYW1lLCB0aGlzLnZlcnNpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlYWRUcmFuc2FjdGlvbigpe1xyXG4gICAgICAgIHJldHVybiBuZXcgSW5kZXhlZERCVHJhbnNhY3Rpb24oXHJcbiAgICAgICAgICAgIHRoaXMuZGF0YXN0b3JlLnRyYW5zYWN0aW9uKFt0aGlzLm5hbWVdLCAncmVhZG9ubHknKS5vYmplY3RTdG9yZSh0aGlzLm5hbWUpLCBcclxuICAgICAgICAgICAgZmFsc2VcclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIHdyaXRlVHJhbnNhY3Rpb24oKXtcclxuICAgICAgICByZXR1cm4gbmV3IEluZGV4ZWREQlRyYW5zYWN0aW9uKFxyXG4gICAgICAgICAgICB0aGlzLmRhdGFzdG9yZS50cmFuc2FjdGlvbihbdGhpcy5uYW1lXSwgJ3JlYWR3cml0ZScpLm9iamVjdFN0b3JlKHRoaXMubmFtZSksIFxyXG4gICAgICAgICAgICB0cnVlXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEluZGV4ZWREQlRyYW5zYWN0aW9uIHtcclxuICAgIGNvbnN0cnVjdG9yKG9iamVjdFN0b3JlLCBtdXRhYmxlKXtcclxuICAgICAgICB0aGlzLm9iamVjdFN0b3JlID0gb2JqZWN0U3RvcmU7XHJcbiAgICAgICAgdGhpcy5tdXRhYmxlID0gbXV0YWJsZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZ2V0SXRlbShrZXkpe1xyXG4gICAgICAgIGNvbnN0IG9iamVjdFN0b3JlUmVxdWVzdCA9IHRoaXMub2JqZWN0U3RvcmUuaW5kZXgoXCJrZXlcIikuZ2V0KGtleSk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgb2JqZWN0U3RvcmVSZXF1ZXN0Lm9uc3VjY2VzcyA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKG9iamVjdFN0b3JlUmVxdWVzdC5yZXN1bHQgJiYgb2JqZWN0U3RvcmVSZXF1ZXN0LnJlc3VsdC52YWx1ZSk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIG9iamVjdFN0b3JlUmVxdWVzdC5vbmVycm9yID0gcmVqZWN0O1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzZXRJdGVtKGtleSwgdmFsdWUpe1xyXG4gICAgICAgIGlmKCF0aGlzLm11dGFibGUpe1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBdHRlbXB0ZWQgdG8gbXV0YXRlIHVzaW5nIGltbXV0YWJsZSBkYXRhYmFzZSByZWZlcmVuY2UuXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICAgICAgICBjb25zdCBpdGVtID0geyBrZXksIHZhbHVlLCB0aW1lc3RhbXAgfTtcclxuICAgICAgICBjb25zdCByZXF1ZXN0ID0gdGhpcy5vYmplY3RTdG9yZS5wdXQoaXRlbSk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgcmVxdWVzdC5vbnN1Y2Nlc3MgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShpdGVtKTtcclxuICAgICAgICAgICAgfTsgICAgXHJcbiAgICAgICAgICAgIHJlcXVlc3Qub25lcnJvciA9IHJlamVjdDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZGVsZXRlSXRlbShrZXkpe1xyXG4gICAgICAgIGNvbnN0IHJlcXVlc3QgPSB0aGlzLm9iamVjdFN0b3JlLmRlbGV0ZShrZXkpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICByZXF1ZXN0Lm9uc3VjY2VzcyA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHJlcXVlc3Qub25lcnJvciA9IHJlamVjdDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/indexedDB.js\n");

/***/ }),

/***/ "./src/monaco.js":
/*!***********************************************************!*\
  !*** delegated ./src/monaco.js from dll-reference monaco ***!
  \***********************************************************/
/*! exports provided: monaco */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference monaco */ \"dll-reference monaco\"))(183);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vc3JjL21vbmFjby5qcyBmcm9tIGRsbC1yZWZlcmVuY2UgbW9uYWNvP2ViNTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9zcmMvbW9uYWNvLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgZGxsLXJlZmVyZW5jZSBtb25hY28gKi8gXCJkbGwtcmVmZXJlbmNlIG1vbmFjb1wiKSkoMTgzKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/monaco.js\n");

/***/ }),

/***/ "./src/pythonExecutor.js":
/*!*******************************!*\
  !*** ./src/pythonExecutor.js ***!
  \*******************************/
/*! exports provided: PythonExecutor, Execution, Completer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PythonExecutor\", function() { return PythonExecutor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Execution\", function() { return Execution; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Completer\", function() { return Completer; });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_2__);\n// import Worker from './pyodide.worker.js';\r\n\r\n\r\n\r\n\r\nclass PythonExecutor {\r\n    constructor(){\r\n        this.executions = {};\r\n        this.completers = {};\r\n        this.pyodide_worker = new Worker(\"pyodide_worker.bundle.js\");\r\n        this.pyodide_worker.addEventListener(\"message\", this._handleMessage.bind(this));\r\n        // The pyodide worker needs to be able to send messages to the service worker, so we make a channel\r\n        // and send one end to the service worker and the other to the pyodide worker.\r\n        let {port1, port2} = new MessageChannel();\r\n        this.pyodide_worker.postMessage({\r\n            cmd : \"service_worker_channel\", \r\n            port : port1,\r\n        }, [port1]);\r\n        navigator.serviceWorker.controller.postMessage({\r\n            cmd : \"pyodide_worker_channel\", \r\n            port : port2,\r\n        }, [port2]);\r\n\r\n        let _readyPromise = new Promise((resolve, reject) => this._readyPromise = {resolve, reject});\r\n        this._readyPromise.promise = _readyPromise;\r\n    }\r\n\r\n    _handleMessage(event){\r\n        let message = event.data;\r\n        let message_cmd = message.cmd;\r\n        let subhandler_name = ({\"execute\" : \"_handleExecutionMessage\", \"complete\" : \"_handleCompletionMessage\", \"ready\" : \"_handleReadyMessage\"})[message_cmd];\r\n        if(!subhandler_name){\r\n            throw new Error(`Unknown command \"${message_cmd}\"`);\r\n        }\r\n        this[subhandler_name](message);\r\n    }\r\n    \r\n    _handleReadyMessage(message){\r\n        if(message.exception){\r\n            this._readyPromise.reject(message.exception);\r\n            return;\r\n        }\r\n        console.log(\"Pyodide is ready!\");\r\n        this._readyPromise.resolve();\r\n    }\r\n\r\n    _handleExecutionMessage(message){\r\n        // execution messages get emitted on the execution object.\r\n        const { uuid, subcmd, last_response } = message;\r\n        const execution = this.executions[uuid];\r\n        if(!execution){\r\n            throw new Error(`Invalid execution uuid \"${uuid}\"`);\r\n        }\r\n        // Check if there is a handler for the given command, otherwise fail.\r\n        // All messages are meant to be handled.\r\n        if(execution.listenerCount(subcmd) === 0) {\r\n            throw new Error(`Unexpected command \"${subcmd}\"`);\r\n        }\r\n        execution.emit(subcmd, message);\r\n        if(last_response){\r\n            execution._close();\r\n            delete this.executions[uuid];\r\n        }\r\n    }\r\n\r\n    _handleCompletionMessage(message){\r\n        const { uuid, subcmd } = message;\r\n        const completer = this.completers[uuid];\r\n        if(!completer){\r\n            throw new Error(`Invalid completer uuid \"${uuid}\"`);\r\n        }\r\n        if(completer.listenerCount(subcmd) === 0) {\r\n            throw new Error(`Unexpected command \"${subcmd}\"`);\r\n        }\r\n        completer.emit(subcmd, message);\r\n    }\r\n\r\n    _postMessage(cmd, uuid, msg){\r\n        Object.assign(msg, {cmd, uuid});\r\n        this.pyodide_worker.postMessage(msg);\r\n    }\r\n\r\n    async ready(){\r\n        return await this._readyPromise.promise;\r\n    }\r\n\r\n\r\n    execute(code){\r\n        const interrupt_buffer = new Int32Array(new SharedArrayBuffer(4));\r\n        const uuid = Object(uuid__WEBPACK_IMPORTED_MODULE_0__[\"v4\"])();\r\n        const execution = new Execution(interrupt_buffer);\r\n        this.executions[uuid] = execution;\r\n        this._postMessage(\"execute\", uuid, {code, interrupt_buffer});\r\n        return execution;\r\n    }\r\n\r\n    new_completer(){\r\n        const uuid = Object(uuid__WEBPACK_IMPORTED_MODULE_0__[\"v4\"])();\r\n        const completer = new Completer(this, uuid);\r\n        this.completers[uuid] = completer;\r\n        this._postMessage(\"complete\", uuid, {subcmd : \"new_completer\"});\r\n        return completer;\r\n    }\r\n\r\n}\r\n\r\nclass Execution extends eventemitter3__WEBPACK_IMPORTED_MODULE_2__[\"EventEmitter\"] {\r\n    /* An execution object. This is for attaching handlers / giving out promises for various lifecycle events of the execution.\r\n       The execution object is created and scheduled by PythonExecutor.execute. Other files do not construct these directly.\r\n       The Executor also dispatches messages from the pyodide worker to the appropriate execution.\r\n       See the python file \"execution.py\" for when python generates the messages this is responding to.\r\n    */\r\n    constructor(interrupt_buffer){\r\n        super();\r\n        this.interrupt_buffer = interrupt_buffer;\r\n        // Using \"once\" here helps us throw a useful error if some logic error causes the pyodide worker to send \r\n        // the same event twice.\r\n        this._validate_syntax = new Promise((resolve, reject) => {\r\n            this.once(\"validate_syntax\", resolve);\r\n        });\r\n        this._result = new Promise((resolve, reject) => {\r\n            this.once(\"result\", (message) => resolve(message.result));\r\n            this.once(\"exception\", (message) => reject(message));\r\n            this.once(\"keyboard_interrupt\", (message) => reject(message));\r\n        });\r\n    }\r\n    \r\n    async validate_syntax(){\r\n        return await this._validate_syntax;\r\n    }\r\n\r\n    async result(){\r\n        return await this._result;\r\n    }\r\n\r\n    setInterrupt(i){\r\n        this.interrupt_buffer[0] = i;\r\n        // Atomics.notify(this.interrupt_buffer, 0);\r\n    }\r\n\r\n    keyboardInterrupt(){\r\n        this.setInterrupt(2); // SIGINT\r\n    }\r\n\r\n    onStdout(handler, context){\r\n        this.on(\"stdout\", function(message) { \r\n            handler.call(this, message.data); \r\n        }, context);\r\n    }\r\n\r\n    ignoreStdout(){\r\n        this.on(\"stdout\", () => undefined);\r\n    }\r\n\r\n    onStderr(handler, context){\r\n        this.on(\"stderr\", function(message) { \r\n            handler.call(this, message.data); \r\n        }, context);\r\n    }\r\n\r\n    ignoreStderr(){\r\n        this.on(\"stderr\", () => undefined);\r\n    }\r\n\r\n    _close(){\r\n        \r\n    }    \r\n}\r\n\r\nclass Completer extends eventemitter3__WEBPACK_IMPORTED_MODULE_2__[\"EventEmitter\"] {\r\n    constructor(executor, uuid){\r\n        super();\r\n        this.executor = executor;\r\n        this.uuid = uuid;\r\n        this.responses = {};\r\n        for(let cmd of [\"completions\", \"completion_detail\"]){\r\n            this._attachResponseHandler(cmd);\r\n        }\r\n    }\r\n\r\n    _attachResponseHandler(cmd){\r\n        this.on(cmd, (msg) => {\r\n            let promise_obj = this.responses[msg.subuuid];\r\n            if(!promise_obj){\r\n                throw Error(`Unknown subuuid ${subuuid}`);\r\n            }\r\n            if(cmd !== promise_obj.cmd) {\r\n                throw new Error(`Wrong command for response subuuid ${subuuid}. Was expecting command to be \"${cmd}\" but got \"${promise_obj.cmd}\"`);\r\n            }\r\n            promise_obj.resolve(msg);\r\n        });\r\n    }\r\n\r\n    _postMessage(subcmd, msg){\r\n        Object.assign(msg, {subcmd});\r\n        this.executor._postMessage(\"complete\", this.uuid, msg);\r\n    }\r\n\r\n    async getCompletions(code, position){\r\n        let subuuid = Object(uuid__WEBPACK_IMPORTED_MODULE_0__[\"v4\"])();\r\n        let response_promise = new Promise((resolve, reject) => \r\n            this.responses[subuuid] = {resolve, reject, cmd : \"completions\"}\r\n        );\r\n        let {lineNumber, column} = position;\r\n        this._postMessage(\"completions\", { subuuid, code, lineNumber, column });\r\n        let response = await response_promise;\r\n        return [response.state_id, response.completions];\r\n    }\r\n\r\n    async getCompletionInfo(state_id, idx){\r\n        let subuuid = Object(uuid__WEBPACK_IMPORTED_MODULE_0__[\"v4\"])();\r\n        let response_promise = new Promise((resolve, reject) => \r\n            this.responses[subuuid] = {resolve, reject, cmd : \"completion_detail\"}\r\n        );\r\n        this._postMessage(\"completion_detail\", { subuuid, idx, state_id });\r\n        let {docstring, signature} = await response_promise;\r\n        return {docstring, signature};\r\n    }\r\n\r\n    close(){\r\n        delete this.executor.completers[this.uuid];\r\n        delete this.executor;\r\n    }\r\n\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pythonExecutor.js\n");

/***/ }),

/***/ "./src/pythonTextCompletion.js":
/*!*************************************!*\
  !*** ./src/pythonTextCompletion.js ***!
  \*************************************/
/*! exports provided: updatePythonLanguageDefinition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updatePythonLanguageDefinition\", function() { return updatePythonLanguageDefinition; });\nconst kind_map = {\r\n    \"module\" : \"Module\",\r\n    \"class\" : \"Class\",\r\n    \"instance\" : \"Value\",\r\n    \"function\" : \"Function\",\r\n    \"param\" : \"TypeParameter\",\r\n    \"path\" : \"Folder\",\r\n    \"keyword\" : \"Keyword\",\r\n    \"property\" : \"Property\",\r\n    \"statement\" : \"Constant\"\r\n}\r\n\r\n\r\nfunction makeSuggestion(label, kind){\r\n    return {\r\n        insertText : label,\r\n        kind,\r\n        label,\r\n        sortText : label.replace(/^_/,\"~\")\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction getCompletionProvider(monaco, repl) {\r\n    return {\r\n        triggerCharacters: ['.'],\r\n        provideCompletionItems: async function (model, position) {\r\n            let suggestions = [];\r\n            position.lineNumber -= repl.readOnlyLines;\r\n            let [state_id, completions] = await repl.jedi_value.getCompletions(repl.value, position);\r\n            for(let {name, kind} of completions){\r\n                let label = name;\r\n                let suggestion = makeSuggestion(label, monaco.languages.CompletionItemKind[kind_map[kind]]);\r\n                suggestion.state_id = state_id;\r\n                suggestion.idx = suggestions.length;\r\n                suggestions.push(suggestion);\r\n            }\r\n            return {suggestions};\r\n        },\r\n        resolveCompletionItem : async function(model, position, item){\r\n            let result = await repl.jedi_value.getCompletionInfo(item.state_id, item.idx);\r\n            let {docstring, signature} = result;\r\n            item.detail = signature;\r\n            item.documentation = docstring;\r\n            return item;\r\n        }\r\n    };\r\n}\r\n\r\n\r\nfunction updatePythonLanguageDefinition(monaco, executor){\r\n    monaco.languages.setLanguageConfiguration('python', {\r\n        indentationRules: {\r\n            // decreaseIndentPattern: /^\\s*pass\\s*$/,\r\n            increaseIndentPattern: /^.*:\\s*$/\r\n        }\r\n    });\r\n    monaco.languages.registerCompletionItemProvider('python', getCompletionProvider(monaco, executor));\r\n}\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcHl0aG9uVGV4dENvbXBsZXRpb24uanM/MmZjZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFdBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUJBQWlCLHFCQUFxQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwiZmlsZSI6Ii4vc3JjL3B5dGhvblRleHRDb21wbGV0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qga2luZF9tYXAgPSB7XHJcbiAgICBcIm1vZHVsZVwiIDogXCJNb2R1bGVcIixcclxuICAgIFwiY2xhc3NcIiA6IFwiQ2xhc3NcIixcclxuICAgIFwiaW5zdGFuY2VcIiA6IFwiVmFsdWVcIixcclxuICAgIFwiZnVuY3Rpb25cIiA6IFwiRnVuY3Rpb25cIixcclxuICAgIFwicGFyYW1cIiA6IFwiVHlwZVBhcmFtZXRlclwiLFxyXG4gICAgXCJwYXRoXCIgOiBcIkZvbGRlclwiLFxyXG4gICAgXCJrZXl3b3JkXCIgOiBcIktleXdvcmRcIixcclxuICAgIFwicHJvcGVydHlcIiA6IFwiUHJvcGVydHlcIixcclxuICAgIFwic3RhdGVtZW50XCIgOiBcIkNvbnN0YW50XCJcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIG1ha2VTdWdnZXN0aW9uKGxhYmVsLCBraW5kKXtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5zZXJ0VGV4dCA6IGxhYmVsLFxyXG4gICAgICAgIGtpbmQsXHJcbiAgICAgICAgbGFiZWwsXHJcbiAgICAgICAgc29ydFRleHQgOiBsYWJlbC5yZXBsYWNlKC9eXy8sXCJ+XCIpXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuZnVuY3Rpb24gZ2V0Q29tcGxldGlvblByb3ZpZGVyKG1vbmFjbywgcmVwbCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB0cmlnZ2VyQ2hhcmFjdGVyczogWycuJ10sXHJcbiAgICAgICAgcHJvdmlkZUNvbXBsZXRpb25JdGVtczogYXN5bmMgZnVuY3Rpb24gKG1vZGVsLCBwb3NpdGlvbikge1xyXG4gICAgICAgICAgICBsZXQgc3VnZ2VzdGlvbnMgPSBbXTtcclxuICAgICAgICAgICAgcG9zaXRpb24ubGluZU51bWJlciAtPSByZXBsLnJlYWRPbmx5TGluZXM7XHJcbiAgICAgICAgICAgIGxldCBbc3RhdGVfaWQsIGNvbXBsZXRpb25zXSA9IGF3YWl0IHJlcGwuamVkaV92YWx1ZS5nZXRDb21wbGV0aW9ucyhyZXBsLnZhbHVlLCBwb3NpdGlvbik7XHJcbiAgICAgICAgICAgIGZvcihsZXQge25hbWUsIGtpbmR9IG9mIGNvbXBsZXRpb25zKXtcclxuICAgICAgICAgICAgICAgIGxldCBsYWJlbCA9IG5hbWU7XHJcbiAgICAgICAgICAgICAgICBsZXQgc3VnZ2VzdGlvbiA9IG1ha2VTdWdnZXN0aW9uKGxhYmVsLCBtb25hY28ubGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtS2luZFtraW5kX21hcFtraW5kXV0pO1xyXG4gICAgICAgICAgICAgICAgc3VnZ2VzdGlvbi5zdGF0ZV9pZCA9IHN0YXRlX2lkO1xyXG4gICAgICAgICAgICAgICAgc3VnZ2VzdGlvbi5pZHggPSBzdWdnZXN0aW9ucy5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKHN1Z2dlc3Rpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB7c3VnZ2VzdGlvbnN9O1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmVzb2x2ZUNvbXBsZXRpb25JdGVtIDogYXN5bmMgZnVuY3Rpb24obW9kZWwsIHBvc2l0aW9uLCBpdGVtKXtcclxuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHJlcGwuamVkaV92YWx1ZS5nZXRDb21wbGV0aW9uSW5mbyhpdGVtLnN0YXRlX2lkLCBpdGVtLmlkeCk7XHJcbiAgICAgICAgICAgIGxldCB7ZG9jc3RyaW5nLCBzaWduYXR1cmV9ID0gcmVzdWx0O1xyXG4gICAgICAgICAgICBpdGVtLmRldGFpbCA9IHNpZ25hdHVyZTtcclxuICAgICAgICAgICAgaXRlbS5kb2N1bWVudGF0aW9uID0gZG9jc3RyaW5nO1xyXG4gICAgICAgICAgICByZXR1cm4gaXRlbTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVB5dGhvbkxhbmd1YWdlRGVmaW5pdGlvbihtb25hY28sIGV4ZWN1dG9yKXtcclxuICAgIG1vbmFjby5sYW5ndWFnZXMuc2V0TGFuZ3VhZ2VDb25maWd1cmF0aW9uKCdweXRob24nLCB7XHJcbiAgICAgICAgaW5kZW50YXRpb25SdWxlczoge1xyXG4gICAgICAgICAgICAvLyBkZWNyZWFzZUluZGVudFBhdHRlcm46IC9eXFxzKnBhc3NcXHMqJC8sXHJcbiAgICAgICAgICAgIGluY3JlYXNlSW5kZW50UGF0dGVybjogL14uKjpcXHMqJC9cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIG1vbmFjby5sYW5ndWFnZXMucmVnaXN0ZXJDb21wbGV0aW9uSXRlbVByb3ZpZGVyKCdweXRob24nLCBnZXRDb21wbGV0aW9uUHJvdmlkZXIobW9uYWNvLCBleGVjdXRvcikpO1xyXG59XHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pythonTextCompletion.js\n");

/***/ }),

/***/ "./src/repl.js":
/*!*********************!*\
  !*** ./src/repl.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pythonTextCompletion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pythonTextCompletion */ \"./src/pythonTextCompletion.js\");\n/* harmony import */ var _monaco__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./monaco */ \"./src/monaco.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _pythonExecutor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pythonExecutor */ \"./src/pythonExecutor.js\");\n/* harmony import */ var _history__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./history */ \"./src/history.js\");\n\n\n\n\n\n\n\nclass ReplElement extends HTMLElement {\n\tstatic get defaultEditorOptions(){\n\t\treturn {\n\t\t\tvalue: \"\",\n\t\t\tlanguage: \"python\",\n\t\t\tfolding : false,\n\t\t\ttheme : \"vs-dark\",\n\t\t\troundedSelection : false,\n\t\t\tfontSize : 20,\n\t\t\tminimap: {\n\t\t\t\tenabled: false\n\t\t\t},\n\t\t\twordWrap: 'wordWrapColumn',\n\t\t\twordWrapColumn: 80,\n\t\t\toverviewRulerLanes : 0,\n\t\t\tscrollBeyondLastLine : true,\n\t\t\tcontextmenu : false,\n\t\t\treadOnly : true,\n\t\t\tlineNumbers : \"none\"\n\t\t};\n    }\n    \n    static get styles() {\n        return `\n            .root {\n                height : 100%;\n                width : 100%;\n            }\n        `\n\t}\n\n\tget readOnly(){\n\t\treturn this._readOnly;\n\t}\n\t\n\tset readOnly(v) {\n\t\tthis._readOnly = !!v;\n\t\t// Monaco has an option called \"cursorBlinking\" that we tried to set to hidden,\n\t\t// but it doesn't seem to do anything. Modifying the dom directly works fine though.\n\t\t// Cursor blinking happens by toggling visibility, but we can use display without trouble.\n\t\tthis.querySelector(\".cursor\").style.display = v ? \"none\" : \"block\";\n\t\t// console.log(this.querySelector(\".cursor\").style.display);\n\t\tthis.querySelector(\".view-lines\").style.cursor = v ? \"default\" : \"text\";\n\t\tthis.editor.updateOptions({ renderLineHighlight : v ? \"none\" : \"line\"});\n\t}\n\n\tget startOfInputPosition(){\n\t\treturn new _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].Position(this.readOnlyLines + 1, 1);\n\t}\n\n\tget endOfInputPosition(){\n\t\treturn this.editor.getModel().getPositionAt(this.editor.getValue().length);\n\t}\n\n\tget endOfInputSelection(){\n\t\treturn _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].Selection.fromPositions(this.endOfInputPosition, this.endOfInputPosition);\n\t}\n\n\tget allOfInputSelection(){\n\t\treturn _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].Selection.fromPositions(this.startOfInputPosition, this.endOfInputPosition);\n\t}\n\n\tget value(){\n\t\treturn this.editor.getModel().getValueInRange(this.allOfInputSelection);\n\t}\n\n\tdoesSelectionIntersectReadOnlyRegion(sel){\n\t\treturn this.editor.getSelection().getStartPosition().isBefore(this.startOfInputPosition);\n\t}\n\n\tdoesCurrentSelectionIntersectReadOnlyRegion(){\n\t\treturn this.doesSelectionIntersectReadOnlyRegion(this.editor.getSelection());\n\t}\n\n\tatStartOfInputRegion(){\n\t\treturn this.editor.getSelection().isEmpty() && this.editor.getPosition().equals(this.startOfInputPosition);\n\t}\n\n\tsetSelectionDirection(sel, dir){\n\t\tlet {lineNumber : sline, column : scol} = sel.getStartPosition();\n\t\tlet {lineNumber : eline, column : ecol} = sel.getEndPosition();\n\t\treturn _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].Selection.createWithDirection(sline, scol, eline, ecol, dir);\n\t}\n\n\tget lineHeight(){\n\t\treturn Number(this.querySelector(\".view-line\").style.height.slice(0,-2));\n\t}\n\n\tget screenHeight(){\n\t\treturn Number(getComputedStyle(document.querySelector(\"repl-terminal\")).height.slice(0,-2));\n\t}\n\n\tget linesPerScreen(){\n\t\treturn Math.floor(this.screenHeight / this.lineHeight);\n\t}\n\n\tgetScreenLinesInModelLine(lineNumber){\n\t\tlet bottom = this.editor.getTopForPosition(lineNumber, this.editor.getModel().getLineLength(lineNumber));\n\t\tlet top = this.editor.getTopForLineNumber(lineNumber);\n\t\treturn Math.floor((bottom - top)/this.lineHeight + 1);\n\t}\n\t\n\tgetLastScreenLineOfModelLine(lineNumber){\n\t\tlet bottom = this.editor.getTopForPosition(lineNumber, this.editor.getModel().getLineLength(lineNumber));\n\t\tlet top = 0;\n\t\treturn Math.floor((bottom - top)/this.lineHeight + 1);\n\t}\n\n\tgetScreenLineOfPosition(pos){\n\t\tlet {lineNumber, column} = pos;\n\t\tif(!Number.isInteger(lineNumber) || !Number.isInteger(column)){\n\t\t\tthrow Error(\"Invalid position!\");\n\t\t}\n\t\tlet bottom = this.editor.getTopForPosition(lineNumber, column);\n\t\tlet top = 0;\n\t\treturn Math.floor((bottom - top)/this.lineHeight + 1);\n\t}\n\n\tgetModelLineCount(){\n\t\treturn this.editor.getModel().getLineCount();\n\t}\n\n\tgetScreenLineCount(){\n\t\tlet totalLines = this.editor.getModel().getLineCount();\n\t\treturn this.getLastScreenLineOfModelLine(totalLines);\n\t}\n\n\trevealSelection(scrollType = _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].editor.ScrollType.Immediate){\n\t\tthis.editor.revealRange(this.editor.getSelection(), scrollType);\n\t}\n\n\tgetLengthOfLastModelLine(){\n\t\treturn this.editor.getModel().getLineLength(this.getModelLineCount());\n\t}\t\t\n\n\tfocus(){\n\t\tthis.editor.focus();\n\t}\n\n\tconstructor(options){\n\t\tsuper();\n\t\tthis._focused = false;\n\t\tthis._visible = true;\n\t\tthis.editorOptions = Object.assign(ReplElement.defaultEditorOptions, options);\n\t\tthis.readOnlyLines = 1;\n\t\tthis.executor = new _pythonExecutor__WEBPACK_IMPORTED_MODULE_3__[\"PythonExecutor\"]();\n\t\tthis.jedi_history = this.executor.new_completer();\n\t\tthis.jedi_value = this.executor.new_completer();\n\t\tObject(_pythonTextCompletion__WEBPACK_IMPORTED_MODULE_0__[\"updatePythonLanguageDefinition\"])(_monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"], this);\n        this.history = new _history__WEBPACK_IMPORTED_MODULE_4__[\"History\"]();\n\t\tthis.historyIdx = this.history.length || 0;\n\t\tthis.historyIndexUndoStack = [];\n\t\tthis.historyIndexRedoStack = [];\n\t\tthis.firstLines = {};\n\t\tthis.outputScreenLines = {};\n\t\tthis.outputModelLines = {};\n\t\t// this.outputModelLines[1] = true;\n\t\t// this.outputModelLines[2] = true;\n\t\t// this.outputScreenLines[1] = true;\n\t\t// this.outputScreenLines[2] = true;\n\t\t// this.firstLines[2] = true; \n\t\tthis.lineOffsetMutationObserver = new MutationObserver((mutationsList, observer) => {\n\t\t\tthis.updateLineOffsets();\n\t\t});\n\t\t// To display our output lines left of our input lines, we need to do the following:\n\t\t//    (1) remove contain:strict; and overflow:hide; from .lines-content\n\t\t//    (2) remove overflow:hide; from \".monaco-scrollable-element\"\n\t\t// \t  (3) attach a mutation observer to .view-lines to make sure left-margin is set appropriately on output line content\n\t\t//    (4) attach a mutation observer to .view-overlays to make sure left-margin is set appropriately on output line overlays\n\t\t// We are doing these things here to ensure that everything continues to work when \"setModel\" is called.\n\t\t// Not clear whether this is necessary / a good idea...\n\t\tthis.overflowMutationObserver = new MutationObserver((mutationsList, observer) => {\n\t\t\tfor(let mutation of mutationsList){\n\t\t\t\tif(mutation.target.matches(\".view-lines\")){\n\t\t\t\t\tlet elt = mutation.target.parentElement;\n\t\t\t\t\tif(!elt.matches(\".lines-content\")){\n\t\t\t\t\t\tthrow Error(\"This shouldn't happen.\");\n\t\t\t\t\t}\n\t\t\t\t\telt.style.contain = \"\";\n\t\t\t\t\telt.style.overflow = \"\";\n\t\t\t\t\telt = elt.parentElement;\n\t\t\t\t\tif(!elt.matches(\".monaco-scrollable-element\")){\n\t\t\t\t\t\tthrow Error(\"This shouldn't happen.\");\n\t\t\t\t\t}\n\t\t\t\t\telt.style.overflow = \"\";\n\t\t\t\t\tthis.lineOffsetMutationObserver.observe(\n\t\t\t\t\t\tthis.querySelector(\".view-lines\"),\n\t\t\t\t\t\t{\"childList\" : true, \"attributeFilter\" : [\"style\"], \"subtree\" : true}\n\t\t\t\t\t);\n\t\t\t\t\tthis.lineOffsetMutationObserver.observe(\n\t\t\t\t\t\tthis.querySelector(\".view-overlays\"),\n\t\t\t\t\t\t{\"childList\" : true, \"attributeFilter\" : [\"style\"], \"subtree\" : true}\n\t\t\t\t\t);\n\t\t\t\t\tthis.updateLineOffsets();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.syntaxErrorDecorationMutationObserver = new MutationObserver(async (mutationsList) => {\n\t\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(5);\n\t\t\tfor(let m of mutationsList){\n\t\t\t\tthis.updateSyntaxErrorDecorationAttributesOnElement(m.target, this.syntaxErrorDecorationAttributes);\n\t\t\t}\n\t\t})\n\t}\n\n\tasync connectedCallback(){\n        let styles = document.createElement(\"style\");\n\t\tstyles.innerText = ReplElement.styles;\n\t\tthis.appendChild(styles);\n\n\t\tthis.dummyTextArea = document.createElement(\"textarea\");\n\t\tthis.dummyTextArea.setAttribute(\"readonly\", \"\");\n\t\tthis.dummyTextArea.style.position = \"absolute\";\n\t\tthis.dummyTextArea.style.opacity = 0;\n\t\t\n\t\tthis.appendChild(this.dummyTextArea);\n\t\tlet div = document.createElement(\"div\");\n\t\tthis.overflowMutationObserver.observe(div, {\"childList\" : true, \"subtree\" : true});\n        div.className = \"root\";\n\t\tthis.appendChild(div);\n\t\t\n\t\tthis._resizeObserver = new ResizeObserver(entries => this.editor.layout());\n\t\tthis._resizeObserver.observe(this);\n\n\t\tthis.editor = _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].editor.create(\n            this.querySelector(\".root\"),\n            this.editorOptions\n\t\t);\n\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(10);\n\t\tthis.querySelector(\".decorationsOverviewRuler\").remove();\n\t\tthis.readOnly = true;\n\t\tthis._displayLoadingPrompt();\n\t\ttry {\n\t\t\tawait this.executor.ready();\n\t\t\tthis._loaded();\n\t\t} catch(e){\n\t\t\tthis._loadingFailed(e);\n\t\t}\n\t}\n\n\tasync _displayLoadingPrompt(){\n\t\tlet idx = 0;\n\t\tlet loadingSpinner = [\"|\",  \"/\", \"—\", \"\\\\\"];\n\t\twhile(!this.ready){\n\t\t\tidx ++;\n\t\t\tidx = idx % loadingSpinner.length;\n\t\t\tthis.editor.setValue(`Loading... ${loadingSpinner[idx]}`);\n\t\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(50);\n\t\t}\n\t}\n\n\tasync _displaySillyLoadingPrompt(){\n\t\tlet idx = -1;\n\t\tlet animation = [\"\\n\\n    -  Loading  -\\n\\n\", \"\\n\\n   -   Loading   -\",\"\\n\\n   /   Loading   /\",\"\\n\\n   |   Loading   |\",\"\\n\\n   \\\\   Loading   \\\\\",\"\\n\\n   -   Loading   -\",\"\\n    |\\n   /   Loading   /\\n                |\",\"     \\\\\\n    |\\n   /   Loading   /\\n                |\\n               \\\\\",\"     \\\\-\\n    |\\n       Loading\\n                |\\n              -\\\\\",\"     \\\\-\\n       /\\n       Loading\\n             /\\n              -\\\\\",\"      -\\n       /\\n       L|ading\\n             /\\n              -\",\"\\n       /   \\\\\\n       L|ading\\n         \\\\   /\\n\",\"          -\\n           \\\\\\n       L|ading\\n         \\\\\\n          -\",\"         /-\\n           \\\\\\n       Loading\\n         \\\\\\n          -/\",\"        |/-\\n\\n       Loading\\n\\n          -/|\",\"        |/\\n      \\\\\\n       Loading\\n              \\\\\\n           /|\",\"        |\\n      \\\\\\n    -  Loading  -\\n              \\\\\\n            |\",\"\\n      \\\\\\n    -  Loading  -\\n              \\\\\\n\",\"\\n\\n    -  Loading  -\\n\\n\",\"\\n\\n    -  Loading  -\\n\\n\",\"\\n\\n    -  Loading  -\\n\\n\",\"\\n\\n    -  Loading  -\\n\\n\",\"\\n\\n    -  Loading  -\\n\\n\",\"\\n\\n    -  Loading  -\\n\\n\"];\n\n\t\tlet observer = new MutationObserver(() => {\n\t\t\tfor(let c of document.querySelectorAll(\".cigr, .cigra\")){\n\t\t\t\tif(c.style.display !== \"none\"){\n\t\t\t\t\tc.style.display = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tobserver.observe(this, {\"subtree\" : true, \"childList\" : true, \"attributesFilter\" : [\"style\"] });\n\t\twhile(!this.ready){\n\t\t\tidx ++;\n\t\t\tidx = idx % animation.length;\n\t\t\tthis.editor.setValue(animation[idx]);\n\t\t\tif(idx === 0) {\n\t\t\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(250);\n\t\t\t}\n\t\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(50);\n\t\t}\n\t\tobserver.disconnect();\n\t}\n\n\n\tasync _loaded(){\n\t\tthis.ready = true;\n\t\tthis.editor.onKeyDown(this._onkey.bind(this));\n\t\tthis.editor.onMouseDown(this._onmousedown.bind(this));\n\t\tthis.editor.onMouseUp(this._onmouseup.bind(this));\n\t\tthis.editor.onDidChangeCursorSelection(this._onDidChangeCursorSelection.bind(this));\n\t\tthis.editor.onDidScrollChange(() => this.updateLineOffsets());\n\t\tthis.editor.onDidChangeModelContent(() => { \n\t\t\tthis.clearSyntaxError();\n\t\t});\n\t\t// this.editor.onDidChangeModelDecorations(() => {\n\t\t// \tconsole.log(\"decs:\", this.editor.getLineDecorations(this.editor.getPosition().lineNumber));\n\t\t// \tif(this.syntaxErrorWidget){\n\t\t// \t\tlet elts = [\n\t\t// \t\t\tdocument.querySelector(\".repl-error-decoration-highlight\"),\n\t\t// \t\t\tdocument.querySelector(\".repl-error-decoration-text\"),\n\t\t// \t\t\tdocument.querySelector(\".repl-error-decoration-underline\"),\n\t\t// \t\t\tdocument.querySelector(\".repl-error-widget\"),\n\t\t// \t\t];\n\t\t// \t\tfor(let elt of elts){\n\t\t// \t\t\tif(!elt){\n\t\t// \t\t\t\tcontinue;\n\t\t// \t\t\t}\n\t\t// \t\t\telt.setAttribute(\"active\");\n\t\t// \t\t}\n\t\t// \t}\n\t\t// })\n\t\tthis.editor.updateOptions({ \"readOnly\" : false });\n\t\twindow.addEventListener(\"cut\", this._oncut.bind(this));\n\t\tthis.editor.updateOptions({\n\t\t\tlineNumbers : this._getEditorLinePrefix.bind(this)\n\t\t});\n\n\t\tthis.outputModelLines = { 1 : true};\n\t\tthis.outputScreenLines = { 1 : true };\n\t\tthis.firstLines[2] = true;\n\t\tthis.editor.setValue(\"\\n\");\n\t\tthis.editor.setPosition(this.endOfInputPosition);\n\t\tthis.focus();\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(0);\n\t\tthis.readOnly = false;\n\t}\n\n\t_loadingFailed(e){\n\t\tthis.ready = true;\n\t\tlet observer = new MutationObserver(() => {\n\t\t\tfor(let c of document.querySelectorAll(\".cigr, .cigra\")){\n\t\t\t\tif(\n\t\t\t\t\tNumber(c.parentElement.style.top.slice(0,-2))/27 >= 2\n\t\t\t\t\t&& c.style.left === \"0px\"\n\t\t\t\t){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(c.style.display !== \"none\"){\n\t\t\t\t\tc.style.display = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tobserver.observe(this, {\"subtree\" : true, \"childList\" : true, \"attributesFilter\" : [\"style\"] });\n\t\tthis.editor.updateOptions({\n\t\t\tlineNumbers : (n) => {\n\t\t\t\tif(n in this.outputModelLines){\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\treturn \"   \";\n\t\t\t}\n\t\t});\t\t\n\t\tthis.editor.setValue(`Fatal Error! \\n \\n ${e.toString().replace(/\\n/g,\"\\n \")}`);\n\t\tthis.editor.updateOptions({\n\t\t\trulers : []\n\t\t});\n\t}\n\n\t_getEditorLinePrefix(n){\n\t\tif(n in this.firstLines){\n\t\t\treturn \">>>\";\n\t\t}\n\t\tif(n in this.outputModelLines){\n\t\t\treturn \"\";\n\t\t}\n\t\treturn \"...\";\n\t}\n\n\tupdateCursorOffset(){\n\t\tlet cursorLineNumber = this.editor.getPosition().lineNumber;\n\t\tthis.querySelector(\".cursor\").style.marginLeft = cursorLineNumber in this.outputModelLines ? \"-4ch\" : \"\";\n\t}\n\n\tupdateLineOffsets(){\n\t\tconst outputLines = \n\t\t\tArray.from(document.querySelectorAll(\".view-line\"))\n\t\t\t\t.map(e => [e, Number(e.style.top.slice(0, -2))]).sort((a,b) => a[1]-b[1]).map(e => e[0]);\n\t\tconst topScreenLine = Math.floor(this.editor.getScrollTop() / this.lineHeight) + 1;\n\t\toutputLines.forEach((e, idx) => {\n\t\t\tlet targetMargin = (topScreenLine + idx) in this.outputScreenLines ? \"-4ch\" : \"\";\n\t\t\tif(e.style.marginLeft !== targetMargin){\n\t\t\t\te.style.marginLeft = targetMargin;\n\t\t\t}\n\t\t});\n\t\tconst outputOverlays = \n\t\t\tArray.from(document.querySelector(\".view-overlays\").children)\n\t\t\t\t.map(e => [e, Number(e.style.top.slice(0, -2))]).sort((a,b) => a[1]-b[1]).map(e => e[0]);\n\t\toutputOverlays.forEach((e, idx) => {\n\t\t\tlet targetMargin = (topScreenLine + idx) in this.outputScreenLines ? \"-5ch\" : \"\";\n\t\t\tif(e.style.marginLeft !== targetMargin){\n\t\t\t\te.style.marginLeft = targetMargin;\n\t\t\t}\n\t\t});\n\t}\t\n\n\t_onmousedown(){\n\t\t// this.mouseDown = true;\n\t\t// this.justSteppedHistory = false;\n\t\t// this.updateCursorOffset();\n\t}\n\n\t_onmouseup(){\n\t\t// this.mouseDown = false;\n\t\t// if(this.doesSelectionIntersectReadOnlyRegion() && this.editor.getSelection().isEmpty()){\n\t\t// \tthis.editor.setPosition(this.endOfInputPosition);\n\t\t// \tthis.revealSelection();\n\t\t// \tthis.updateCursorOffset();\n\t\t// }\n\t}\t\n\n\tasync _onDidChangeCursorSelection(e){\n\t\t// This means this was a history change event.\n\t\t// We use this jank secondarySelection approach to signal a history change event because\n\t\t// monaco's edit stack API doesn't let us attach our own undo/redo callback.\n\t\tif(e.secondarySelections.length > 0){\n\t\t\tthis.editor.setSelection(e.selection);\n\t\t\t// If the source is the keyboard, the user directly changed the history and stepHistory() covered everything.\n\t\t\tif(e.source !== \"keyboard\"){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(e.reason === _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].editor.CursorChangeReason.Redo){\n\t\t\t\tthis.history.undoStep();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(e.reason === _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].editor.CursorChangeReason.Undo){\n\t\t\t\tthis.history.redoStep();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthrow Error(\"Unreachable?\");\n\t\t}\n\t\t// Hide line selection if in read only region or if whole editor is read only.\n\t\t// This improves feedback by quite a lot.\n\t\tif(this.doesCurrentSelectionIntersectReadOnlyRegion()){\n\t\t\tthis.editor.updateOptions({ renderLineHighlight : \"none\" });\n\t\t\tthis.querySelector(\".cursor\").style.display = \"none\";\n\t\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(0);\n\t\t\tthis.querySelector(\".cursor\").style.display = \"none\";\n\t\t} else {\n\t\t\tthis.editor.updateOptions({ renderLineHighlight : \"line\" });\n\t\t\tthis.querySelector(\".cursor\").style.display = this.readOnly ? \"none\" : \"block\";\n\t\t}\n\t\t// await sleep(0); // Need to sleep(0) to allow this.mouseDown to update.\n\t\t// if(!this.mouseDown && e.selection.isEmpty() && this.doesCurrentSelectionIntersectReadOnlyRegion()){\n\t\t// \tthis.editor.setPosition(this.endOfInputPosition);\n\t\t// \tthis.revealSelection();\n\t\t// }\n\t\t// this.updateCursorOffset();\n\t}\n\n\n\t/** \n\t*   e.preventDefault() doesn't work on certain keys, including Backspace, Tab, and Delete.\n\t* \tAs a recourse to prevent these rogue key events, we move the focus out of the input area \n\t*  \tfor just a moment and then move it back.\n\t*   The .dummy should be a readonly textarea element.\n\t*/\n\tasync preventKeyEvent(){\n\t\tthis.dummyTextArea.focus();\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(0);\n\t\tthis.focus();\n\t}\n\n\n\tenforceReadOnlyRegion(e){\n\t\tif(e.browserEvent.type !== \"keydown\"){\n\t\t\treturn;\n\t\t}\n\t\tif(\n\t\t\t(e.browserEvent.ctrlKey || e.browserEvent.altKey || !/^[ -~]$/.test(e.browserEvent.key)) \n\t\t\t&& ![\"Backspace\", \"Tab\", \"Delete\", \"Enter\"].includes(e.browserEvent.key)\n\t\t){\n\t\t\treturn;\n\t\t}\n\t\tthis.intersectSelectionWithInputRegion();\n\t}\n\n\tintersectSelectionWithInputRegion(){\n\t\tconst sel = this.editor.getSelection();\n\t\tlet newSel = sel.intersectRanges(this.allOfInputSelection);\n\t\tif(newSel){\n\t\t\tnewSel = this.setSelectionDirection(newSel, sel.getDirection());\n\t\t\tthis.editor.setSelection(newSel);\n\t\t} else {\n\t\t\tthis.editor.setPosition(this.endOfInputPosition);\n\t\t}\n\t\tthis.revealSelection();\n\t\treturn !newSel || !sel.equalsSelection(newSel);\n\t}\n\n\n\t_onkey(e){\n\t\t// Test if completion suggestion widget is visible.\n\t\t// Usually it is hidden by removing the \".visible\" class, but in some unusual circumstances\n\t\t// it ends up with height 0 but still \".visible\". So we also test the height.\n\t\tlet elt = this.querySelector(\".suggest-widget.visible\");\n\t\tlet suggestWidgetVisibleQ = elt && elt.offsetHeight > 0;\n\t\tif(suggestWidgetVisibleQ){\n\t\t\tif(\n\t\t\t\t// This annoying conditional spells out which keys we want the suggestWidget to handle\n\t\t\t\t(e.browserEvent.key !== \"PageUp\" || !e.browserEvent.shiftKey)\n\t\t\t\t&& (!e.browserEvent.ctrlKey || ![\"x\", \"Home\", \"a\"].includes(e.browserEvent.key))\n\t\t\t\t&& ((!e.shiftKey && !e.altKey) || e.browserEvent.key !== \"ArrowUp\")\n\t\t\t){\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif(this.maybeStepHistory(e.browserEvent)){\n\t\t\tthis.preventKeyEvent();\n\t\t\treturn\n\t\t}\n\t\tthis.justSteppedHistory = false;\n\t\t// Many Ctrl + <some-key> commands require special handling.\n\t\tif(e.browserEvent.ctrlKey){\n\t\t\tif(e.browserEvent.key in ReplElement._ctrlCmdHandlers){\n\t\t\t\tReplElement._ctrlCmdHandlers[e.browserEvent.key].call(this, e);\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\tif(e.browserEvent.key === \"PageUp\"){\n\t\t\tthis._onPageUp(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// Prevent keys that would edit value if read only\n\t\tif(this.readOnly && !e.browserEvent.altKey){\n\t\t\tif(\n\t\t\t\t!e.browserEvent.ctrlKey && /^[ -~]$/.test(e.browserEvent.key) \n\t\t\t\t|| [\"Backspace\", \"Tab\", \"Delete\", \"Enter\"].includes(e.browserEvent.key)\n\t\t\t){\n\t\t\t\tthis.preventKeyEvent();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// Prevent backing up past start of repl input\n\t\tif(this.atStartOfInputRegion() && [\"ArrowLeft\", \"Backspace\"].includes(e.browserEvent.key)){\n\t\t\tthis.preventKeyEvent();\n\t\t\treturn;\n\t\t}\n\t\tthis.enforceReadOnlyRegion(e);\n\t\tif(e.browserEvent.key === \"Escape\"){\n\t\t\tif(this.currentExecution){\n\t\t\t\tthis.currentExecution.keyboardInterrupt();\n\t\t\t}\n\t\t}\n\n\t\tif(e.browserEvent.key === \"Enter\") {\n\t\t\tif(this.shouldEnterSubmit(e.browserEvent)){\n\t\t\t\tthis.preventKeyEvent();\n\t\t\t\tthis.submit();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(e.browserEvent.shiftKey){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet currentLineContent = this.editor.getModel().getLineContent(this.editor.getPosition().lineNumber);\n\t\t\t// If the current line is empty except for spaces, outdent it.\n\t\t\t// TODO: Good choice or no?\n\t\t\tif(/^ +$/.test(currentLineContent)){\n\t\t\t\tthis.editor.getAction(\"editor.action.outdentLines\").run();\n\t\t\t\tthis.preventKeyEvent();\n\t\t\t}\n\t\t}\t\t\n\t}\n\n\tstatic get _ctrlCmdHandlers(){\n\t\treturn {\n\t\t\t\"c\" : ReplElement.prototype._onCtrlC,\n\t\t\t\"v\" : ReplElement.prototype._onCtrlV,\n\t\t\t\"x\" : ReplElement.prototype._onCtrlX,\n\t\t\t\"a\" : ReplElement.prototype._onCtrlA,\n\t\t\t\"Home\" : ReplElement.prototype._onCtrlHome\n\t\t};\n\t}\n\n\t_onCtrlC() {}\n\n\t_onCtrlV(e) {\n\t\tif(e.browserEvent.altKey){\n\t\t\t// Ctrl+alt+V does nothing by default.\n\t\t\treturn;\n\t\t}\n\t\tif(this.readOnly){\n\t\t\tthis.preventKeyEvent();\n\t\t}\n\t\tif(this.doesCurrentSelectionIntersectReadOnlyRegion()){\n\t\t\tthis.preventKeyEvent();\n\t\t\tthis.editor.setPosition(this.endOfInputPosition);\n\t\t\tthis.revealSelection();\n\t\t}\n\t}\n\n\t_onCtrlX() {\n\t\t// In these cases, we do special handling in the \"window.oncut\" event listener see _oncut\n\t\tif(\n\t\t\tthis.readOnly ||\n\t\t\tthis.doesCurrentSelectionIntersectReadOnlyRegion() \n\t\t\t|| this.value.indexOf(\"\\n\") === -1 && this.editor.getSelection().isEmpty()\n\t\t){\n\t\t\tthis.preventKeyEvent();\n\t\t}\n\t\t// Otherwise allow default behavior\n\t\treturn\n\t}\n\n\t_oncut(e) {\n\t\te.preventDefault();\n\t\tif(this.editor.getSelection().isEmpty()){\n\t\t\tif(this.value.indexOf(\"\\n\") === -1 || this.readOnly){\n\t\t\t\tevent.clipboardData.setData('text/plain', this.value + \"\\n\");\n\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\tthis.editor.executeEdits(\n\t\t\t\t\t\"cut\", \n\t\t\t\t\t[{\n\t\t\t\t\t\trange : this.allOfInputSelection,\n\t\t\t\t\t\ttext : \"\"\n\t\t\t\t\t}],\n\t\t\t\t\t[this.endOfInputSelection]\n\t\t\t\t);\n\t\t\t\tthis.editor.pushUndoStop();\n\t\t\t\tthis.preventKeyEvent();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Else allow default handling\n\t\t\treturn;\n\t\t}\n\t\tif(this.doesCurrentSelectionIntersectReadOnlyRegion() || this.readOnly){ \n\t\t\tevent.clipboardData.setData('text/plain', this.editor.getModel().getValueInRange(this.editor.getSelection()));\n\t\t\tthis.preventKeyEvent();\n\t\t\treturn;\n\t\t}\n\t\t// Else allow default handling\n\t}\n\n\t_onCtrlA(){\n\t\tif(this.altKey){\n\t\t\t// By default if alt key is pressed nothing happens.\n\t\t\treturn;\n\t\t}\n\t\tif(this.doesCurrentSelectionIntersectReadOnlyRegion()){\n\t\t\t// If the current selection intersects read only region, allow default behavior\n\t\t\t// which selects everything\n\t\t\treturn;\n\t\t}\n\t\t// Otherwise, we only want to select the input region\n\t\tthis.editor.setSelection(this.allOfInputSelection);\n\t\tthis.preventKeyEvent();\n\t}\n\n\t_onCtrlHome(e){\n\t\tif(e.altKey){\n\t\t\t// By default nothing happens if alt key is pressed.\n\t\t\treturn;\n\t\t}\n\t\t// If we are in the read only region\n\t\tif(this.doesCurrentSelectionIntersectReadOnlyRegion()){\n\t\t\t// And the user is holding shift, allow default behavior\n\t\t\tif(e.browserEvent.shiftKey){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// If in read only region but user is not holding shift, move to start of input region\n\t\t\tthis.editor.setPosition(this.startOfInputPosition);\n\t\t\tthis.revealSelection();\n\t\t\tthis.preventKeyEvent();\n\t\t\treturn;\n\t\t}\n\t\t// If in input region, select from start of current selection to start of input region\n\t\tif(e.browserEvent.shiftKey){\n\t\t\tthis.editor.setSelection(this.editor.getSelection().setEndPosition(this.startOfInputPosition));\n\t\t} else {\n\t\t\tthis.editor.setPosition(this.startOfInputPosition);\n\t\t}\n\t\tthis.revealSelection();\n\t\tthis.preventKeyEvent();\n\t}\n\n\t_onPageUp(e){\n\t\tif(e.browserEvent.altKey){\n\t\t\t// alt key means move screen not cursor. So default handling is always fine.\n\t\t\treturn;\n\t\t}\n\t\t// If we are in the read only region\n\t\tif(this.doesCurrentSelectionIntersectReadOnlyRegion()){\n\t\t\t// And the user is holding shift, allow default behavior\n\t\t\tif(e.browserEvent.shiftKey){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// If in read only region but user is not holding shift, move to start of input region\n\t\t\tthis.editor.setPosition(this.startOfInputPosition);\n\t\t\tthis.revealSelection();\n\t\t\tthis.preventKeyEvent();\n\t\t\treturn;\t\t\t\t\n\t\t}\n\t\t// If we would page up into read only region, select input region up to beginning.\n\t\tlet targetLine = this.getScreenLineOfPosition(this.editor.getPosition()) - this.linesPerScreen + 1;\n\t\tif(targetLine <= this.getLastScreenLineOfModelLine(this.readOnlyLines)){\n\t\t\tif(e.browserEvent.shiftKey){\n\t\t\t\tthis.editor.setSelection(this.editor.getSelection().setEndPosition(this.startOfInputPosition));\n\t\t\t} else {\n\t\t\t\tthis.editor.setPosition(this.startOfInputPosition);\n\t\t\t}\n\t\t\tthis.revealSelection();\n\t\t\tthis.preventKeyEvent();\n\t\t}\n\t\t// Otherwise, allow default page up behavior\n\t}\n\n\tasync nextHistory(n = 1){\n        await this.stepHistory(n);\n    }\n    \n    async previousHistory(n = 1){\n        await this.stepHistory(-n);\n    }\n\n    async stepHistory(didx) {\n\t\tthis.history.setTemporaryValue(this.value);\n\t\tconst changed = this.history.step(didx);\n\t\tif(!changed){\n\t\t\treturn\n\t\t}\n\t\tthis.editor.pushUndoStop();\n\t\t// Use a multi cursor before and after the edit operation to indicate that this is a history item\n\t\t// change. In onDidChangeCursorSelection will check for a secondary selection and use the presence \n\t\t// of it to deduce that a history step occurred. We then immediately clear the secondary selection\n\t\t// to prevent the user from ever seeing it.\n\t\tthis.editor.getModel().pushEditOperations(\n\t\t\t[this.editor.getSelection(), new _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].Selection(1, 1, 1, 1)], \n\t\t\t[{\n\t\t\t\trange : this.allOfInputSelection,\n\t\t\t\ttext : (await this.history.value) || \"\"\n\t\t\t}],\n\t\t\t() => [this.endOfInputSelection, new _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].Selection(1, 1, 1, 1)]\n\t\t);\n\t\tthis.editor.pushUndoStop();\n\t\t// For some reason we end up selecting the input. This is maybe a glitch with pushEditOperations?\n\t\t// It doesn't happen with this.editor.executeEdits, but using executeEdits doesn't work because\n\t\t// for some reason we can't convince it that the before cursor state is a multi cursor like we need \n\t\t// for this strategy.\n\t\tthis.editor.setPosition(this.endOfInputPosition);\n\t\tthis.revealSelection();\n\t\t// Record how much the history index changed for undo.\n\t\tthis.historyIndexRedoStack = [];\n\t\tthis.historyIndexUndoStack.push(didx);\n\t\tthis.justSteppedHistory = true;\n\t}\n\n\t\n\tmaybeStepHistory(event){\n\t\tlet result = this.shouldStepHistory(event);\n\t\tif(result){\n\t\t\tlet dir = {\"ArrowUp\" : -1, \"ArrowDown\" : 1 }[event.key];\n\t\t\tthis.stepHistory(dir);\n\t\t}\n\t\treturn result;\n\t}\n\n    shouldStepHistory(event){\n\t\tif(![\"ArrowUp\", \"ArrowDown\"].includes(event.key)){\n\t\t\treturn false;\n\t\t}\n\t\tif(this.justSteppedHistory){\n\t\t\treturn true;\n\t\t}\n\t\tif(!this.editor.getSelection().isEmpty()){\n\t\t\treturn false;\n\t\t}\n\t\tlet pos = this.editor.getPosition();\n        if(event.key === \"ArrowUp\"){\n\t\t\treturn this.getScreenLineOfPosition(pos) === this.getScreenLineOfPosition(this.startOfInputPosition);\n        }\n        if(event.key === \"ArrowDown\"){\n            return this.getScreenLineOfPosition(pos) === this.getScreenLineOfPosition(this.endOfInputPosition);\n        }\n        throw Error(\"Unreachable\");\n\t}\n\n\tshouldEnterSubmit(event){\n\t\tif(event.shiftKey){\n\t\t\treturn false;\n\t\t}\n\t\tif(event.ctrlKey){\n\t\t\treturn true;\n\t\t}\n\t\tif(this.editor.getPosition().lineNumber !== this.getModelLineCount()){\n\t\t\treturn false;\n\t\t}\n\t\tif(this.getLengthOfLastModelLine() == 0){\n\t\t\treturn true;\n\t\t}\n\t\tif(this.value.search(\"\\n\") >= 0){\n\t\t\treturn false;\n\t\t}\n\t\tif(/(:|\\\\)\\s*$/.test(this.value)){\n\t\t\treturn false;\n\t\t}\n        return true;\n\t}\n\n\tasync submit(){\n\t\tif(this.syntaxErrorWidget){\n\t\t\t// Don't do anything if there's already a syntax error...\n\t\t\treturn;\n\t\t}\n\t\tconst code = this.value;\n\t\tif(!code.trim()){\n\t\t\treturn;\n\t\t}\n\t\t// this.editor.setValue(this.editor.getValue().trimEnd());\n\t\t// this.printToConsole(\"\\n\");\n\t\t// await sleep(0);\n\t\t// editor.setValue seems to undo changes to the console so readOnly has to be set second\n\t\t// and we need to sleep first.\n\t\tthis.readOnly = true; \n\t\t// execution is a handle we can use to cancel.\n\t\tconst execution = this.executor.execute(code);\n\t\tthis.currentExecution = execution;\n\t\texecution.onStdout((data) => this.printToConsole(data));\n\t\texecution.onStderr((data) => this.printToConsole(data));\n\t\tlet syntaxCheck = await execution.validate_syntax(code);\n\t\tif(!syntaxCheck.valid){\n\t\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(0);\n\t\t\tthis.showSyntaxError(syntaxCheck.errors);\n\t\t\tthis.currentExecution = undefined;\n\t\t\tthis.readOnly = false;\n\t\t\t// await sleep(0);\n\t\t\t// this.editor.setPosition(this.endOfInputPosition);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor.setValue(this.editor.getValue().trimEnd());\n\t\tthis.printToConsole(\"\\n\");\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(0);\n\t\tthis.history.push(code);\n        await Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(0);\n\t\tthis.historyIdx = this.history.length;\n\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await execution.result();\n\t\t\tthis.addOutput(result);\n\t\t} catch(e) {\n\t\t\tthis.addOutput(e.traceback);\n\t\t}\n\t\tthis.currentExecution = undefined;\n\t\tthis.prepareInput();\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(0);\n\t\tthis.readOnly = false;\n\t}\n\n\taddOutput(value){\n\t\t// If something printed to stdout but didn't end the line, we'll have a nonempty line\n\t\t// at the bottom. We don't want our output sharing with that, so insert a newline in \n\t\t// this case.\n\t\tif(this.getLengthOfLastModelLine() !== 0){\n\t\t\tthis.printToConsole(\"\\n\");\n\t\t}\n\t\tif(value === undefined){\n\t\t\treturn;\n\t\t}\n\t\tthis.printToConsole(`${value}\\n`);\n\t}\n\n    printToConsole(value){\n\t\tconst oldNumScreenLines = this.getScreenLineCount();\n\t\tconst oldNumModelLines = this.getModelLineCount();\n\t\tthis.editor.setValue(`${this.editor.getValue()}${value}`);\n\t\tconst newNumScreenLines = this.getScreenLineCount();\n\t\tconst newNumModelLines = this.getModelLineCount();\n\t\tfor(let curLine = oldNumModelLines + 1; curLine <= newNumModelLines; curLine++){\n\t\t\tthis.outputModelLines[curLine] = true;\n\t\t}\n\t\tfor(let curLine = oldNumScreenLines + 1; curLine <= newNumScreenLines; curLine++){\n\t\t\tthis.outputScreenLines[curLine] = true;\n\t\t}\n\t}\n\n\tprepareInput(){\n\t\tconst numScreenLines = this.getScreenLineCount();\n\t\tlet numModelLines = this.getModelLineCount();\n\t\tif(this.getLengthOfLastModelLine() === 0){\n\t\t\t// Usually there is an empty model line at the bottom, it has been marked as an output line\n\t\t\t// so onmark it.\n\t\t\tdelete this.outputModelLines[numModelLines];\n\t\t\tdelete this.outputScreenLines[numScreenLines];\n\t\t} else {\n\t\t\t// Ocassionally something printed stuff to stdout but didn't terminate the line.\n\t\t\t// We terminate it ourselves in that case to prevent weirdness.\n\t\t\tthis.editor.setValue(this.editor.getValue() + \"\\n\");\n\t\t\tnumModelLines++;\n\t\t}\n\t\tthis.readOnlyLines = numModelLines - 1;\n\t\tthis.firstLines[numModelLines] = true;\n\t\t// the value of firstLines signals that the \"line number\" should show as a \">>>\" prompt.\n\t\t// we need to refresh the editor to get it to show up though so set value to current value.\n\t\tthis.editor.setValue(this.editor.getValue());\t\t\n\t\t\n\t\tthis.editor.setPosition(this.endOfInputPosition);\n\t\tthis.revealSelection();\n\t}\n\n\tupdateSyntaxErrorDecorationAttributes(state){\n\t\tlet elts = [\n\t\t\tdocument.querySelector(\".repl-error-decoration-highlight\"),\n\t\t\tdocument.querySelector(\".repl-error-decoration-text\"),\n\t\t\tdocument.querySelector(\".repl-error-decoration-underline\"),\n\t\t\tdocument.querySelector(\".repl-error-widget\"),\n\t\t];\n\t\tfor(let elt of elts){\n\t\t\tif(!elt){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.updateSyntaxErrorDecorationAttributesOnElement(elt, state);\n\t\t}\n\t}\t\n\n\tupdateSyntaxErrorDecorationAttributesOnElement(elt, state){\n\t\tfor(let [k, v] of Object.entries(state)){\n\t\t\tif(v === false && elt.hasAttribute(k)){\n\t\t\t\telt.removeAttribute(k);\n\t\t\t} else if(elt.getAttribute(k) !== v){\n\t\t\t\telt.setAttribute(k, v);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync clearSyntaxError(){\n\t\tif(!this.syntaxErrorWidget){\n\t\t\treturn;\n\t\t}\n\t\tthis.syntaxErrorDecorationAttributes = { \"transition\" : \"hide\", \"active\" : false };\n\t\tthis.updateSyntaxErrorDecorationAttributes(this.syntaxErrorDecorationAttributes);\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"promiseFromDomEvent\"])(document.querySelector(\".repl-error-widget\"), \"transitionend\");\n\t\tthis.syntaxErrorDecorationAttributes = { \"transition\" : false, \"active\" : false };\n\t\tthis.updateSyntaxErrorDecorationAttributes(this.syntaxErrorDecorationAttributes);\n\t\tthis.editor.removeContentWidget(this.syntaxErrorWidget);\n\t\tthis.editor.deltaDecorations(this.decorationIds || [], []);\n\t\tthis.decorationIds = [];\n\t\tthis.syntaxErrorWidget = undefined;\n\t}\n\t\n\tasync showSyntaxError(errors){\n\t\t// TODO: maybe handle multiple syntax errors case...? Probably not important...\n\t\tconsole.log(errors);\n\t\tlet error = errors[0];\n\t\tlet [start_line, start_col] = error.start_pos;\n\t\tstart_line += this.readOnlyLines;\n\t\tlet [end_line, end_col] = error.end_pos;\n\t\tend_line += this.readOnlyLines;\t\t\n\t\tlet decorations = [{\n\t\t\trange: new _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].Range(start_line, 1, end_line, 1),\n\t\t\toptions: {\n\t\t\t\tisWholeLine: true,\n\t\t\t\tafterContentClassName: 'repl-error repl-error-fade-in repl-error-decoration-underline',\n\t\t\t}\n\t\t}];\n\t\t// console.log([start_line, start_col, end_line, end_col + 1]);\n\t\tif(start_line !== end_line || start_col != end_col){\n\t\t\t// let endCol = this.editor.getModel().getLineMaxColumn(line);\n\t\t\tdecorations.push({\n\t\t\t\trange: new _monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].Range(start_line, start_col, end_line, end_col + 1),\n\t\t\t\toptions: {\n\t\t\t\t\t// isWholeLine: true,\n\t\t\t\t\tclassName: 'repl-error repl-error-fade-in repl-error-decoration-highlight',\n\t\t\t\t\tinlineClassName : 'repl-error repl-error-decoration-text'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(0);\n\t\tthis.editor.deltaDecorations(this.decorationsIds || [], []);\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(0);\n\t\tthis.decorations = decorations;\n\t\tthis.decorationIds = this.editor.deltaDecorations([], decorations);\n\t\t// this.editor.onDidChangeModelDecorations((e) => {\n\t\t// \tconsole.log(\"decs:\", this.editor.getLineDecorations(this.editor.getPosition().lineNumber))\n\t\t// });\n\t\tthis.syntaxErrorWidget = {\n\t\t\tdomNode: null,\n\t\t\tgetId: function() {\n\t\t\t\treturn 'error.widget';\n\t\t\t},\n\t\t\tgetDomNode: function() {\n\t\t\t\tif (!this.domNode) {\n\t\t\t\t\tthis.domNode = document.createElement('div');\n\t\t\t\t\tthis.domNode.innerText = `${error.msg}`; //`${error.type}: ${error.msg}`;\n\t\t\t\t\tthis.domNode.classList.add(\"repl-error\");\n\t\t\t\t\tthis.domNode.classList.add(\"repl-error-fade-in\");\n\t\t\t\t\tthis.domNode.classList.add(\"repl-error-widget\");\n\t\t\t\t}\n\t\t\t\treturn this.domNode;\n\t\t\t},\n\t\t\tgetPosition: function() {\n\t\t\t\treturn {\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tlineNumber: start_line, // Is this the best line to choose?\n\t\t\t\t\t\tcolumn: 1\n\t\t\t\t\t},\n\t\t\t\t\tpreference: [_monaco__WEBPACK_IMPORTED_MODULE_1__[\"monaco\"].editor.ContentWidgetPositionPreference.BELOW]\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tthis.editor.addContentWidget(this.syntaxErrorWidget);\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"sleep\"])(10);\n\t\tdocument.querySelector(\".repl-error-widget\")\n\t\t// What is this supposed to do??\n\t\tlet elts = [\n\t\t\tdocument.querySelector(\".repl-error-decoration-highlight\"),\n\t\t\tdocument.querySelector(\".repl-error-decoration-text\"),\n\t\t\tdocument.querySelector(\".repl-error-decoration-underline\"),\n\t\t];\n\t\t// for(let elt of elts){\n\t\t// \tif(!elt){\n\t\t// \t\tcontinue;\n\t\t// \t}\n\t\t// \tthis.syntaxErrorDecorationMutationObserver.observe(\n\t\t// \t\telt,\n\t\t// \t\t{ \"attributeFilter\" : [\"transition\", \"active\"] }\n\t\t// \t);\n\t\t// }\n\n\n\t\tthis.syntaxErrorDecorationAttributes = { \"transition\" : \"show\", \"active\" : \"\" };\n\t\tthis.updateSyntaxErrorDecorationAttributes(this.syntaxErrorDecorationAttributes);\n\t\tawait Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"promiseFromDomEvent\"])(document.querySelector(\".repl-error-widget\"), \"transitionend\");\n\t\tthis.syntaxErrorDecorationAttributes = { \"transition\" : false, \"active\" : \"\" };\n\t\tthis.updateSyntaxErrorDecorationAttributes(this.syntaxErrorDecorationAttributes);\n\t}\n}\ncustomElements.define('repl-terminal', ReplElement);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/repl.js\n");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! exports provided: sleep, promiseFromDomEvent, animationFrame, throttle, uuidv4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sleep\", function() { return sleep; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"promiseFromDomEvent\", function() { return promiseFromDomEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"animationFrame\", function() { return animationFrame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throttle\", function() { return throttle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uuidv4\", function() { return uuidv4; });\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nfunction promiseFromDomEvent(eventTarget, eventName, filter){\r\n    return new Promise(resolve => {\r\n        eventTarget.addEventListener(eventName, function handler(e) {\r\n            if(filter === undefined || filter(e)) {\r\n                eventTarget.removeEventListener(eventName, handler);\r\n                resolve(e);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction animationFrame() {\r\n    return new Promise(resolve => window.requestAnimationFrame(resolve));\r\n}\r\n\r\n// Returns a function, that, when invoked, will only be triggered at most once\r\n// during a given window of time. Normally, the throttled function will run\r\n// as much as it can, without ever going more than once per `wait` duration;\r\n// but if you'd like to disable the execution on the leading edge, pass\r\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\r\nfunction throttle(wait, options) {\r\n    return function helper(func){\r\n        let context, args, result;\r\n        let timeout = null;\r\n        let previous = 0;\r\n        options = options || {};\r\n        function later() {\r\n            previous = options.leading === false ? 0 : Date.now();\r\n            timeout = null;\r\n            result = func.apply(context, args);\r\n            if (!timeout){\r\n                context = args = null;\r\n                wrapper.resolve();\r\n            } \r\n        };\r\n        wrapper.stoppedPromise = new Promise(resolve => resolve());\r\n        function wrapper() {\r\n            let now = Date.now();\r\n            if(previous === 0){\r\n                wrapper.stoppedPromise = new Promise(resolve => wrapper.resolve = resolve);\r\n            }\r\n            if (previous === 0 && options.leading === false){\r\n                previous = now;\r\n            } \r\n            let remaining = wait - (now - previous);\r\n            context = this;\r\n            args = arguments;\r\n            if (remaining <= 0 || remaining > wait) {\r\n                if (timeout) {\r\n                    clearTimeout(timeout);\r\n                    timeout = null;\r\n                }\r\n                previous = now;\r\n                result = func.apply(context, args);\r\n                if (!timeout){\r\n                    context = args = null;\r\n                }\r\n            } else if(!timeout) {\r\n                if(options.trailing !== false){\r\n                    timeout = setTimeout(later, remaining);\r\n                } else {\r\n                    wrapper.resolve();\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        return wrapper;\r\n    }\r\n};\r\n\r\n\r\nfunction uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMuanM/MDI1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBTztBQUNQO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMOztBQUVPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssZUFBZTtBQUNiO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwiZmlsZSI6Ii4vc3JjL3V0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNsZWVwKG1zKSB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwcm9taXNlRnJvbURvbUV2ZW50KGV2ZW50VGFyZ2V0LCBldmVudE5hbWUsIGZpbHRlcil7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgZXZlbnRUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGZ1bmN0aW9uIGhhbmRsZXIoZSkge1xyXG4gICAgICAgICAgICBpZihmaWx0ZXIgPT09IHVuZGVmaW5lZCB8fCBmaWx0ZXIoZSkpIHtcclxuICAgICAgICAgICAgICAgIGV2ZW50VGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoYW5kbGVyKTtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUoZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYW5pbWF0aW9uRnJhbWUoKSB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlc29sdmUpKTtcclxufVxyXG5cclxuLy8gUmV0dXJucyBhIGZ1bmN0aW9uLCB0aGF0LCB3aGVuIGludm9rZWQsIHdpbGwgb25seSBiZSB0cmlnZ2VyZWQgYXQgbW9zdCBvbmNlXHJcbi8vIGR1cmluZyBhIGdpdmVuIHdpbmRvdyBvZiB0aW1lLiBOb3JtYWxseSwgdGhlIHRocm90dGxlZCBmdW5jdGlvbiB3aWxsIHJ1blxyXG4vLyBhcyBtdWNoIGFzIGl0IGNhbiwgd2l0aG91dCBldmVyIGdvaW5nIG1vcmUgdGhhbiBvbmNlIHBlciBgd2FpdGAgZHVyYXRpb247XHJcbi8vIGJ1dCBpZiB5b3UnZCBsaWtlIHRvIGRpc2FibGUgdGhlIGV4ZWN1dGlvbiBvbiB0aGUgbGVhZGluZyBlZGdlLCBwYXNzXHJcbi8vIGB7bGVhZGluZzogZmFsc2V9YC4gVG8gZGlzYWJsZSBleGVjdXRpb24gb24gdGhlIHRyYWlsaW5nIGVkZ2UsIGRpdHRvLlxyXG5leHBvcnQgZnVuY3Rpb24gdGhyb3R0bGUod2FpdCwgb3B0aW9ucykge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGhlbHBlcihmdW5jKXtcclxuICAgICAgICBsZXQgY29udGV4dCwgYXJncywgcmVzdWx0O1xyXG4gICAgICAgIGxldCB0aW1lb3V0ID0gbnVsbDtcclxuICAgICAgICBsZXQgcHJldmlvdXMgPSAwO1xyXG4gICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xyXG4gICAgICAgIGZ1bmN0aW9uIGxhdGVyKCkge1xyXG4gICAgICAgICAgICBwcmV2aW91cyA9IG9wdGlvbnMubGVhZGluZyA9PT0gZmFsc2UgPyAwIDogRGF0ZS5ub3coKTtcclxuICAgICAgICAgICAgdGltZW91dCA9IG51bGw7XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XHJcbiAgICAgICAgICAgIGlmICghdGltZW91dCl7XHJcbiAgICAgICAgICAgICAgICBjb250ZXh0ID0gYXJncyA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB3cmFwcGVyLnJlc29sdmUoKTtcclxuICAgICAgICAgICAgfSBcclxuICAgICAgICB9O1xyXG4gICAgICAgIHdyYXBwZXIuc3RvcHBlZFByb21pc2UgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHJlc29sdmUoKSk7XHJcbiAgICAgICAgZnVuY3Rpb24gd3JhcHBlcigpIHtcclxuICAgICAgICAgICAgbGV0IG5vdyA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIGlmKHByZXZpb3VzID09PSAwKXtcclxuICAgICAgICAgICAgICAgIHdyYXBwZXIuc3RvcHBlZFByb21pc2UgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHdyYXBwZXIucmVzb2x2ZSA9IHJlc29sdmUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChwcmV2aW91cyA9PT0gMCAmJiBvcHRpb25zLmxlYWRpbmcgPT09IGZhbHNlKXtcclxuICAgICAgICAgICAgICAgIHByZXZpb3VzID0gbm93O1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICBsZXQgcmVtYWluaW5nID0gd2FpdCAtIChub3cgLSBwcmV2aW91cyk7XHJcbiAgICAgICAgICAgIGNvbnRleHQgPSB0aGlzO1xyXG4gICAgICAgICAgICBhcmdzID0gYXJndW1lbnRzO1xyXG4gICAgICAgICAgICBpZiAocmVtYWluaW5nIDw9IDAgfHwgcmVtYWluaW5nID4gd2FpdCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRpbWVvdXQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGltZW91dCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBwcmV2aW91cyA9IG5vdztcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRpbWVvdXQpe1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRleHQgPSBhcmdzID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIGlmKCF0aW1lb3V0KSB7XHJcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYWlsaW5nICE9PSBmYWxzZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHJlbWFpbmluZyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHdyYXBwZXIucmVzb2x2ZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gd3JhcHBlcjtcclxuICAgIH1cclxufTtcclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXVpZHY0KCkge1xyXG4gICAgcmV0dXJuICd4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgnLnJlcGxhY2UoL1t4eV0vZywgZnVuY3Rpb24oYykge1xyXG4gICAgICB2YXIgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDAsIHYgPSBjID09ICd4JyA/IHIgOiAociAmIDB4MyB8IDB4OCk7XHJcbiAgICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcclxuICAgIH0pO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils.js\n");

/***/ }),

/***/ "dll-reference monaco":
/*!*************************!*\
  !*** external "monaco" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = monaco;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJtb25hY29cIj81N2FmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImRsbC1yZWZlcmVuY2UgbW9uYWNvLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBtb25hY287Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///dll-reference monaco\n");

/***/ })

/******/ });