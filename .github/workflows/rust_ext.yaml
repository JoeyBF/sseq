name: Test rust_ext

on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
        RUST_BACKTRACE: 1
        RUSTUP_TOOLCHAIN: ${{ matrix.toolchain }}

    strategy:
      matrix:
          toolchain: ['nightly-2021-02-27', 'nightly']

    steps:
    - uses: actions/checkout@v2

    - name: Cache files
      uses: actions/cache@v2
      with:
          path: |
              ~/.rustup
              ~/.cargo
              **/target
          key: ${{ matrix.toolchain }}-${{ hashFiles('ext/Cargo.*') }}

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.toolchain }}

    - name: Run tests
      run: make -C ext test

    - name: Run concurrent tests
      run: make -C ext test-concurrent

  lint:
    runs-on: ubuntu-latest
    env:
        RUST_BACKTRACE: 1
        RUSTUP_TOOLCHAIN: ${{ matrix.toolchain }}

    strategy:
      matrix:
          toolchain: ['nightly-2021-02-27', 'nightly']

    steps:
    - uses: actions/checkout@v2

    - name: Cache files
      uses: actions/cache@v2
      with:
          path: |
              ~/.rustup
              ~/.cargo
              **/target
          key: lint-${{ matrix.toolchain }}-${{ hashFiles('ext/Cargo.*', 'rust_webserver/Cargo.*') }}

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy, rustfmt

    - name: Run lint
      run: make -C ext lint

    - name: Lint rust_webserver
      run: make -C rust_webserver lint

  examples:
    runs-on: ubuntu-latest
    env:
        RUST_BACKTRACE: 1
        RUSTUP_TOOLCHAIN: ${{ matrix.toolchain }}

    strategy:
      matrix:
          toolchain: ['nightly-2021-02-27', 'nightly']

    steps:
    - uses: actions/checkout@v2

    - name: Cache files
      uses: actions/cache@v2
      with:
          path: |
              ~/.rustup
              ~/.cargo
              **/target
          key: example-${{ matrix.toolchain }}-${{ hashFiles('ext/Cargo.*') }}

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.toolchain }}

    - name: Run examples
      run: make -C ext run_examples


  wasm-build:
    needs: [test, lint, examples]
    runs-on: ubuntu-20.04
    env:
        RUST_BACKTRACE: 1
        RUSTUP_TOOLCHAIN: ${{ matrix.toolchain }}

    strategy:
      matrix:
          toolchain: ['nightly-2021-02-27', 'nightly']

    steps:
    - uses: actions/checkout@v2

    - name: Cache files
      uses: actions/cache@v2
      with:
          path: |
              ~/.rustup
              ~/.cargo
              **/target
          key: wasm-${{ matrix.toolchain }}-${{ hashFiles('ext/Cargo.*') }}

    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.toolchain }}
          target: wasm32-unknown-unknown

    - name: Install wasm-opt
      run: sudo apt-get install binaryen

    - name: Setup build environment
      run: bin/setup-wasm.sh
      working-directory: rust_webserver

    - name: Add .cargo/bin to path
      run: echo ~/.cargo/bin >> $GITHUB_PATH

    - name: Build wasm
      run: bin/build-wasm.sh
      working-directory: rust_webserver


    - name: Deploy
      if: ${{ matrix.toolchain == 'nightly' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: JamesIves/github-pages-deploy-action@4.1.0
      with:
          branch: gh-pages
          folder: rust_webserver/dist/
